/*
 * Copyright (c) 2000 World Wide Web Consortium,
 * (Massachusetts Institute of Technology, Institut National de
 * Recherche en Informatique et en Automatique, Keio University). All
 * Rights Reserved. This program is distributed under the W3C's Software
 * Intellectual Property License. This program is distributed in the
 * hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE.
 * See W3C License http://www.w3.org/Consortium/Legal/ for more details.
 */

// File: http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/css.idl

module css
{
	// Introduced in DOM Level 2:
	interface CSSPrimitiveValue : CSSValue {
		// UnitTypes
		const unsigned short CSS_UNKNOWN	= 0;
		const unsigned short CSS_NUMBER		= 1;
		const unsigned short CSS_PERCENTAGE	= 2;
		const unsigned short CSS_EMS		= 3;
		const unsigned short CSS_EXS		= 4;
		const unsigned short CSS_PX			= 5;
		const unsigned short CSS_CM			= 6;
		const unsigned short CSS_MM			= 7;
		const unsigned short CSS_IN			= 8;
		const unsigned short CSS_PT			= 9;
		const unsigned short CSS_PC			= 10;
		const unsigned short CSS_DEG		= 11;
		const unsigned short CSS_RAD		= 12;
		const unsigned short CSS_GRAD		= 13;
		const unsigned short CSS_MS			= 14;
		const unsigned short CSS_S			= 15;
		const unsigned short CSS_HZ			= 16;
		const unsigned short CSS_KHZ		= 17;
		const unsigned short CSS_DIMENSION	= 18;
		const unsigned short CSS_STRING		= 19;
		const unsigned short CSS_URI		= 20;
		const unsigned short CSS_IDENT		= 21;
		const unsigned short CSS_ATTR		= 22;
		const unsigned short CSS_COUNTER	= 23;
		const unsigned short CSS_RECT		= 24;
		const unsigned short CSS_RGBCOLOR	= 25;

		readonly attribute unsigned short  primitiveType;

		void setFloatValue(in unsigned short unitType,
						   in float floatValue)
						   [raises(core::DOMException)];

		float getFloatValue(in unsigned short unitType)
							[raises(core::DOMException)];

		void setStringValue(in unsigned short stringType,
							in core::DOMString stringValue)
							[raises(core::DOMException)];

		core::DOMString getDOMStringValue() [raises(core::DOMException)];
		Counter getCounterValue() [raises(core::DOMException)];
		Rect getRectValue() [raises(core::DOMException)];
		RGBColor getRGBColorValue() [raises(core::DOMException)];
	};
};
