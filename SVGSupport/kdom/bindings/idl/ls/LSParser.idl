module ls
{
  interface LSParser {
    readonly attribute core::DOMConfiguration domConfig;
             attribute LSParserFilter  filter;
    readonly attribute boolean         async;
    readonly attribute boolean         busy;
    core::Document           parse(in LSInput input)
                                        raises(dom::DOMException, 
                                               LSException);
    core::Document           parseURI(in DOMString uri)
                                        raises(dom::DOMException, 
                                               LSException);
    // ACTION_TYPES
    const unsigned short      ACTION_APPEND_AS_CHILDREN      = 1;
    const unsigned short      ACTION_REPLACE_CHILDREN        = 2;
    const unsigned short      ACTION_INSERT_BEFORE           = 3;
    const unsigned short      ACTION_INSERT_AFTER            = 4;
    const unsigned short      ACTION_REPLACE                 = 5;
    core::Node               parseWithContext(in LSInput input, 
                                        in core::Node contextArg, 
                                        in unsigned short action)
                                        raises(dom::DOMException, 
                                               LSException);
    void               abort();
  };
};
