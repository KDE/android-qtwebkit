#!/usr/bin/perl -w

use strict;
use Cwd;
use File::Basename;

my $ProgramName = 'copy-webcore-files-to-webkit';

my %WebCoreFiles = (
    'kwq/DOM.h' => 'DOM.subproj/DOM.h',
    'kwq/DOMCore.h' => 'DOM.subproj/DOMCore.h',
    'kwq/DOMViews.h' => 'DOM.subproj/DOMViews.h',
    'kwq/DOMEvents.h' => 'DOM.subproj/DOMEvents.h',
    'kwq/DOMStylesheets.h' => 'DOM.subproj/DOMStylesheets.h',
    'kwq/DOMCSS.h' => 'DOM.subproj/DOMCSS.h',
    'kwq/DOMTraversal.h' => 'DOM.subproj/DOMTraversal.h',
    'kwq/DOMRange.h' => 'DOM.subproj/DOMRange.h',
    'kwq/DOMHTML.h' => 'DOM.subproj/DOMHTML.h',
    'kwq/DOM-compat.h' => 'DOM.subproj/DOM-compat.h',
);

my %JavaScriptCoreFiles = (
    'bindings/npruntime.h' => 'Plugins.subproj/npruntime.h',
);

my $JavaScriptCorePath = '';
my $WebCorePath = '';
my $WebKitPath = '';

CheckInWebKit();
CheckWebCoreFound();
CheckJavaScriptCoreFound();
CopyFilesIfNeeded();

#=======================================================================================
# subroutines

sub Fail {
    my ($say) = @_;
    Say("*** $ProgramName: $say");
    exit(-1);
}

sub Say {
    my ($say) = @_;
    print STDERR $say, "\n";
}

sub CheckInWebKit {
	if (cwd() =~ /WebKit$/) {
		# ok...we're in WebCore
		$WebKitPath = cwd();
	}
	else {
		Say("*** $ProgramName: not being run from WebKit directory. Cannot copy, exiting...");
        exit(0);
	}
}

sub CheckWebCoreFound {
	my $path = cwd();
	$path = dirname($path) . '/WebCore';
	if (-d $path) {
		# ok...WebCore is where we expect it
		$WebCorePath = $path;
	}
	else {
		Say("*** $ProgramName: WebCore is not a sibling directory to WebKit. Cannot copy, exiting...");
        exit(0);
	}
}

sub CheckJavaScriptCoreFound {
	my $path = cwd();
	$path = dirname($path) . '/JavaScriptCore';
	if (-d $path) {
		# ok...WebCore is where we expect it
		$JavaScriptCorePath = $path;
	}
	else {
		Say("*** $ProgramName: JavaScriptCore is not a sibling directory to WebKit. Cannot copy, exiting...");
        exit(0);
	}
}

sub CopyFilesIfNeeded {
	# Only copy files if the dest file does not exist
	# or the source file is different than the dest file
	my $blab = 0;
	
	for my $file (keys(%WebCoreFiles)) {
		my $source = "$WebCorePath/$file";
		my $dest = "$WebKitPath/$WebCoreFiles{$file}";
		if (! -f $source) {
			Fail("$source is not a plain file");	
		}
		if (-e $dest && ! -f $dest) {
			Fail("$dest is not a plain file");	
		}
		if (! -e $dest || system("cmp $source $dest > /dev/null 2>&1")) {
			Say("$ProgramName: copying files...") if $blab == 0;
			$blab = 1;
			ExecuteCommand("cp -f $source $dest");
		}
	}

	for my $file (keys(%JavaScriptCoreFiles)) {
		my $source = "$JavaScriptCorePath/$file";
		my $dest = "$WebKitPath/$JavaScriptCoreFiles{$file}";
		if (! -f $source) {
			Fail("$source is not a plain file");	
		}
		if (-e $dest && ! -f $dest) {
			Fail("$dest is not a plain file");	
		}
		if (! -e $dest || system("cmp $source $dest > /dev/null 2>&1")) {
			Say("$ProgramName: copying files...") if $blab == 0;
			$blab = 1;
			ExecuteCommand("cp -f $source $dest");
		}
	}
}

sub ExecuteCommand {
    my ($cmd) = @_;
    Say($cmd);
    my $result = system($cmd);
    if ($result != 0) {
        Fail("error: $result");
        exit($result);
    }
}
