2006-03-20  Tim Omernick  <timo@apple.com>

        Reviewed by John Sullivan.

        Moved -_contentView from WebFrameViewInternal to WebFrameViewPrivate.  Safari
        needs this.

        * WebView/WebFrameView.m:
        (-[WebFrameView _contentView]):
        * WebView/WebFrameViewInternal.h:
        * WebView/WebFrameViewPrivate.h:

2006-03-17  Mitz Pettel  <opendarwin.org@mitzpettel.com>

        Reviewed by Darin, landed by Beth.

        - fix http://bugzilla.opendarwin.org/show_bug.cgi?id=7693
          WebKit relies on unpredictable timing for onload events

        * WebView/WebDataSource.m:
        (-[WebDataSource _receivedMainResourceError:complete:]): Check for 
        completion on the WebCore side before checking on the WebKit side, 
        to ensure that the onload event is emitted before the WebFrame load 
        delegate is sent the webView:didFinishLoadForFrame: message. For 
        DumpRenderTree, this ensures that the render tree is dumped after 
        the onload handler is run.
        * WebView/WebLoader.m:
        (-[NSURLProtocol didFailWithError:]): If load has already been 
        cancelled (which could happen if the parent's onload handler caused 
        the frame to detach), do nothing.

2006-03-17  John Sullivan  <sullivan@apple.com>

        Reviewed by Beth Dakin
        
        - fixed <rdar://problem/4239051> Sometimes "Copy Link" in Safari results in a 
        URL on the pasteboard with no usable "title"

        * History/WebURLsWithTitles.m:
        (+[WebURLsWithTitles writeURLs:andTitles:toPasteboard:]):
        trim whitespace from titles that are put on pasteboard. This leaves an empty string
        for the title in cases where there's no displayed text, like an image in an <a> element
        that happens to have whitespace in the source, e.g. <a href="foo"> <img whatever></a>

2006-03-17  Darin Adler  <darin@apple.com>

        - missing bit of my check-in yesterday

        Maciej moved setWindowFrame for me, but I also had removed
        setWindowContentRect.

        * WebCoreSupport/WebFrameBridge.m: Removed unused setWindowContextRect and
        windowContentRect methods.

2006-03-17  Adele Peterson  <adele@apple.com>

        Reviewed by Hyatt.

        WebKit part of fix for:
        http://bugzilla.opendarwin.org/show_bug.cgi?id=7797 
        Can't set background color on new text fields

        Added function to draw bezeled text field without drawing background.

        * WebCoreSupport/WebGraphicsBridge.m:
        (-[WebGraphicsBridge drawBezeledTextFieldCell:enabled:]): Added.

2006-03-16  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by Eric.
        
        - move setWindowFrame / windowFrame to WebPageBridge to fix build

        * WebCoreSupport/WebFrameBridge.m:
        * WebCoreSupport/WebPageBridge.m:
        (-[WebPageBridge setWindowFrame:]):
        (-[WebPageBridge windowFrame]):

2006-03-15  Darin Adler  <darin@apple.com>

        Fix by Patrick Beard, reviewed by me.

        - fix <rdar://problem/4478181> WebPluginController leaks NSArray and NSMutableSet objects

        * Plugins/WebPluginController.m:
        (-[WebPluginController initWithDocumentView:]): Call CFMakeCollectable on the CFSet
        so we can act like it's an NSSet.
        (-[WebPluginController dealloc]): Release _views and _checksInProgress.

2006-03-13  Tim Omernick  <timo@apple.com>

        Reviewed by Maciej.

        <rdar://problem/4476873> Support printing for plugin documents (not embedded plugins)

        * WebView/WebFrameViewPrivate.h:
        * WebView/WebFrameView.m:
        (-[WebFrameView documentViewShouldHandlePrint]):
        Called by the host application before it initializes and runs a print operation.  If NO
        is returned, the host application will abort its print operation and call
        -printDocumentView on the WebFrameView.  The document view is then expected to run its
        own print operation.  If YES is returned, the host application's print operation will
        continue as normal.
        (-[WebFrameView printDocumentView]):
        Called by the host application when the WebFrameView returns YES from -documentViewShouldHandlePrint.

        * Plugins/WebNetscapePluginDocumentView.m:
        (-[WebNetscapePluginDocumentView documentViewShouldHandlePrint]):
        Allow the plugin to take over printing if it defines an NPP_Print function
        (-[WebNetscapePluginDocumentView printDocumentView]):
        Print the plugin document.

2006-03-13  Geoffrey Garen  <ggaren@apple.com>

        Reviewed by timo.

        - Fixed the load progress indicator to give more incremental feedback, 
        and to stop spending so much time near 100%.

        I did two things:
        (1) Fixed some bugs and a misspelling in the previous heuristic's 
        implementation
        (2) Added two new rules to the heuristic:
            (a) Treat the first layout as the half-way point.
            (b) Just like we jump the first 10% to indicate that a load has
            started, jump the last 10% to indicate that a load has finished.

        Rule 2a is good for two reasons. First, it seems unnatural for loading
        to be "more than half done" when you can't even see anything. Second,
        in the early stages of laading our estimate of how much we'll need to
        load is often off by as much as 6000% (e.g., cnn.com). So anything that
        makes the progress indicator more conservative in the early stages of 
        loading is helpful.

        Rule 2b is good because it's confusing for loading to be "100% done"
        but still ongoing.

        FIXME: The indicator still isn't perfect. For example, the old behavior
        shows up @ moviefone.com. Two areas for future work:
        (1) Estimate number of linked resources. Our code estimates the size
        of a single resource, but does nothing to estimate the number of
        resources that resource might link to. This is the key to why we're
        so wrong at the beginning.
        (2) Improve "when to do first layout" heuristic. A JavaScript query
        for a style property forces layout, creating a phantom first layout 
        with no content, essentially nullifying 2a for certain pages.
        
        Filed <rdar://problem/4475834> to track estimating the number of 
        linked resources. Phantom layouts are already on Hyatt's radar.

        * WebView/WebFrame.m:
        (-[WebFrame _setState:]): Update firstLayoutDone
        (-[WebFrame _numPendingOrLoadingRequests:]): Bug fix: In the recurisve 
        case, query 'frame' instead of 'self', so that we actually recurse.
        (-[WebFrame _firstLayoutDone]): New method
        (-[WebFrame _didFirstLayout]): Update firstLayoutDone
        * WebView/WebFramePrivate.h: Added firstLayoutDone ivar
        * WebView/WebView.m:
        (-[WebView _incrementProgressForConnectionDelegate:data:]):
        (1) Implemented 2a and 2b
        (2) Bug fix: only update the 'last time I sent a notification' time if 
        we actually send a notification.
        (3) Don't test for progress < 0 because ensuring progress < max
        also ensures max - progress > 0. (Do still test for progress > max 
        because rounding errors make that a possibility -- although a very 
        minor one.)
        (4) Query only the loading frame and its subframes for pending
        requests instead of defaulting to the main frame. This is a slight
        optimization in cases where the main frame did not begin the load,
        and it makes the code more consistent.

2006-03-13  John Sullivan  <sullivan@apple.com>

        Reviewed by Tim Omernick.
        
        - fixed <rdar://problem/4475857> API: Setting a history item limit programmatically doesn't work

        * History/WebHistory.m:
        (-[WebHistoryPrivate _loadHistoryGuts:URL:error:]):
        use [self historyItemLimit], which prefers the explicitly-set value and falls back to the
        NSUserDefaults value, instead of using the NSUserDefaults value explicitly.

2006-03-10  Darin Adler  <darin@apple.com>

        Reviewed by Adele.

        * WebCoreSupport/WebFrameBridge.m: Remove unused requestedURLString method.

2006-03-10  Darin Adler  <darin@apple.com>

        Reviewed by Geoff.

        - change how frame namespacing works to be more completely on the WebCore side

        * WebView/WebFrameInternal.h: Remove _setFrameNamespace: and _frameNamespace.
        * WebView/WebFrame.m: Ditto.

        * WebView/WebView.m:
        (-[WebView setGroupName:]): Call -[WebCorePageBridge setGroupName:].
        (-[WebView groupName]): Call -[WebCorePageBridge groupName].

2006-03-09  Alexey Proskuryakov  <ap@nypop.com>

        Reviewed by Darin.

        - http://bugzilla.opendarwin.org/show_bug.cgi?id=7656
         Query string always appended to Flash URLs, instead of being replaced.

        * Misc/WebNSURLExtras.h: Added _webkit_URLByRemovingResourceSpecifier.
        * Misc/WebNSURLExtras.m:
        (+[NSURL _web_URLWithData:relativeToURL:]): Call _webkit_URLByRemovingResourceSpecifier to
        work around CFURL not removing non-path components from base URLs in some cases.
        (-[NSURL _webkit_URLByRemovingComponent:]): New generic function for removing URL components.
        (-[NSURL _webkit_URLByRemovingFragment]): Moved implementation to the above method.
        (-[NSURL _webkit_URLByRemovingResourceSpecifier]): Added.

2006-03-07  Darin Adler  <darin@apple.com>

        Reviewed by Anders.

        - fix http://bugzilla.opendarwin.org/show_bug.cgi?id=7655
          unwanted output while running layout tests

        * WebView/WebDataSourcePrivate.h:
        * WebView/WebDataSource.m:
        (-[WebDataSource _setRepresentation:]): Clear the flag that records whether we've sent
        all the data to the representation or not; need this to prevent telling the same representation
        both that we've succeeded and then later that we've failed.
        (-[WebDataSource _setMainDocumentError:]): Don't send an error if representationFinishedLoading
        is already YES. Set representationFinishedLoading.
        (-[WebDataSource _finishedLoading]): Set representationFinishedLoading.
        (-[WebDataSource _setupForReplaceByMIMEType:]): Ditto.

2006-03-06  Tim Omernick  <timo@apple.com>

        Reviewed by Kevin Decker.

        <rdar://problem/4457574> assertion failure watching trailers at netflix.com -[WebNetscapePluginRepresentation
        receivedData:withDataSource:] + 684

        * Plugins/WebNetscapePluginRepresentation.m:
        (-[WebNetscapePluginRepresentation receivedData:withDataSource:]):
        Moved the ASSERT(instance) to the block that actually requires an assertion -- the plugin view should never
        have a NULL instance by the time we start the NPStream (by calling -startStreamWithResponse:).
        Some stream teardown logic changed with my fix to 4153419: when a WebBaseNetscapePluginStream is destroyed,
        it now clears its NPP instance backpointer.  The WebBaseNetscapePluginStream may be destroyed from within
        -startStreamWithResponse: if NPP_NewStream() returns an error.  We can handle this gracefully by changing
        the assertion before -receivedData: to a simple NULL check.
        This is unrelated to the Radar, but prior to this fix, we would attempt an NPP_Write() with the initial
        stream data even if NPP_NewStream() returned an error.  Seems like that alone could cause issues, though
        I'm guessing that plugins handle this in practice.

2006-03-03  Timothy Hatcher  <timothy@apple.com>

        Reviewed by Darin.
        
        <rdar://problem/4411822> wrong element shown in Inspector inspecting main image at apple.com
        <rdar://problem/4411908> in the Web Inspector, state of disclosure triangles should be preserved after search
        http://bugzilla.opendarwin.org/show_bug.cgi?id=6616
        Bug 6616: Double-clicking on a search result seems broken
        http://bugzilla.opendarwin.org/show_bug.cgi?id=6709
        Bug 6709: TypeError: Value undefined (result of expression treeScrollbar.refresh) is not object.

        Code clean up and move more code into JavaScript.
        Removes a few unused ObjC methods.
        Many search fixes. Reveals the focused node when exiting the search.
        Shows a "No Selection" screen when there are no search results.
        Shows a node count for the number of results.
        Fixes a couple of TypeErrors that show on the console.
        Uses the system selection color in the Style pane tables.

        * English.lproj/Localizable.strings: removed localized strings
        * WebInspector.subproj/WebInspector.m:
        (-[WebInspector init]):
        (-[WebInspector dealloc]):
        (-[WebInspector window]):
        (-[WebInspector setSearchQuery:]):
        (-[WebInspector resizeTopArea]):
        (-[WebInspector searchPerformed:]): called from JavaScript when a search happens
        (-[WebInspector _toggleIgnoreWhitespace:]):
        (-[WebInspector _exitSearch:]): exit search results on double click
        (-[WebInspector _focusRootNode:]):
        (-[WebInspector _revealAndSelectNodeInTree:]):
        (-[WebInspector _refreshSearch]):
        (-[WebInspector _update]):
        (-[WebInspector _updateTraversalButtons]):
        (-[WebInspector _updateRoot]):
        (-[WebInspector _updateTreeScrollbar]):
        (-[WebInspector _updateSystemColors]): update CSS with system colors
        (-[WebInspector webView:didFinishLoadForFrame:]):
        (-[WebInspector webView:plugInViewWithArguments:]):
        (-[WebInspector outlineViewSelectionDidChange:]): test for webViewLoaded
        (-[WebInspectorPrivate init]): alloc rightArrowImage and downArrowImage
        (-[WebInspectorPrivate dealloc]): no more matchedRules
        (-[DOMNode _displayName]): removed localization UI_STRING calls.
        * WebInspector.subproj/WebInspectorInternal.h:
        * WebInspector.subproj/webInspector/inspector.css:
        * WebInspector.subproj/webInspector/inspector.html:
        * WebInspector.subproj/webInspector/inspector.js:

2006-03-02  Alexey Proskuryakov  <ap@nypop.com>

        Fixed a typo in the comments added in the previous checkin.

        * WebCoreSupport/WebFrameBridge.m:
        (-[WebFrameBridge syncLoadResourceWithMethod:URL:customHeaders:postData:finalURL:responseHeaders:statusCode:]):
        * WebCoreSupport/WebSubresourceLoader.m:
        (+[WebSubresourceLoader startLoadingResource:withMethod:URL:customHeaders:referrer:forDataSource:]):
        (+[WebSubresourceLoader startLoadingResource:withMethod:URL:customHeaders:postData:referrer:forDataSource:]):

2006-03-02  Alexey Proskuryakov  <ap@nypop.com>

        Reviewed by Darin.

        - http://bugzilla.opendarwin.org/show_bug.cgi?id=7540
          REGRESSION: frequent cache-related crashes

        - http://bugzilla.opendarwin.org/show_bug.cgi?id=7393
          A stale comment about XMLHttpRequest responses being never cached

        * WebCoreSupport/WebFrameBridge.m: Don't call setHTTPHeader if the method is GET.
        (-[WebFrameBridge syncLoadResourceWithMethod:URL:customHeaders:postData:finalURL:responseHeaders:statusCode:]):
        * WebCoreSupport/WebSubresourceLoader.m: Ditto. Also removed a stale comment about
        XMLHTTPRequests.
        (+[WebSubresourceLoader startLoadingResource:withMethod:URL:customHeaders:referrer:forDataSource:]):
        (+[WebSubresourceLoader startLoadingResource:withMethod:URL:customHeaders:postData:referrer:forDataSource:]):

2006-02-23  David Harrison  <harrison@apple.com>

        Reviewed by Justin.

        <rdar://problem/4359736> Support outlining ability with lists

        Added Mail SPI for list level changes.  It is SPI because it is not complete support
        for outlining.  See <rdar://problem/4457070> "API for html lists as note outlines".
        
        * WebView/WebHTMLView.m:
        (-[WebHTMLView _canIncreaseSelectionListLevel]):
        (-[WebHTMLView _canDecreaseSelectionListLevel]):
        (-[WebHTMLView _increaseSelectionListLevel]):
        (-[WebHTMLView _decreaseSelectionListLevel]):
        * WebView/WebHTMLViewPrivate.h:

2006-03-01  Alexey Proskuryakov  <ap@nypop.com>

        Reviewed by Darin.

        - http://bugzilla.opendarwin.org/show_bug.cgi?id=3812
          XMLHttpRequest: PUT, DELETE, HEAD and all other methods but POST actually do a GET.

        All WebKit changes are to use the method parameter passed from WebCore.

        * WebCoreSupport/WebFrameBridge.m:
        (-[WebFrameBridge startLoadingResource:withMethod:URL:customHeaders:]):
        (-[WebFrameBridge startLoadingResource:withMethod:URL:customHeaders:postData:]):
        (-[WebFrameBridge syncLoadResourceWithMethod:URL:customHeaders:postData:finalURL:responseHeaders:statusCode:]):
        * WebCoreSupport/WebSubresourceLoader.h:
        * WebCoreSupport/WebSubresourceLoader.m:
        (+[WebSubresourceLoader startLoadingResource:withMethod:URL:customHeaders:referrer:forDataSource:]):
        (+[WebSubresourceLoader startLoadingResource:withMethod:URL:customHeaders:postData:referrer:forDataSource:]):

2006-03-01  Timothy Hatcher  <timothy@apple.com>

        Reviewed by Darin.

        http://bugzilla.opendarwin.org/show_bug.cgi?id=7450
        elementAtPoint is expensive and should return a smart dictionary
        
        <rdar://problem/2952761> moving the mouse around eats more CPU than I would expect (7450)
        
        elementAtPoint for WebHTMLView now returns a WebElementDictionary,
        when objectForKey is called it will lookup in the DOM, cache and return the value

        * Misc/WebElementDictionary.h: Added.
        * Misc/WebElementDictionary.m: Added.
        (addLookupKey):
        (cacheValueForKey):
        (+[WebElementDictionary initializeLookupTable]):
        (-[WebElementDictionary initWithInnerNonSharedNode:innerNode:URLElement:andPoint:]):
        (-[WebElementDictionary dealloc]):
        (-[WebElementDictionary _fillCache]):
        (-[WebElementDictionary count]):
        (-[WebElementDictionary keyEnumerator]):
        (-[WebElementDictionary objectForKey:]):
        (-[WebElementDictionary _domNode]):
        (-[WebElementDictionary _webFrame]):
        (-[WebElementDictionary _targetWebFrame]):
        (-[WebElementDictionary _title]):
        (-[WebElementDictionary _imageRect]):
        (-[WebElementDictionary _isSelected]):
        * Misc/WebNSViewExtras.m:
        (-[NSView _web_dragImage:element:rect:event:pasteboard:source:offset:]):
        * WebKit.xcodeproj/project.pbxproj:
        * WebView/WebHTMLView.m:
        (-[WebHTMLView _updateMouseoverWithEvent:]):
        (-[WebHTMLView _startDraggingImage:at:operation:event:sourceIsDHTML:DHTMLWroteData:]):
        (-[NSArray elementAtPoint:]):
        * WebView/WebView.m:
        * WebView/WebViewPrivate.h:

2006-02-28  Darin Adler  <darin@apple.com>

        Reviewed by Adele.

        - remove obsolete WebCoreScrollView class

        * WebView/WebDynamicScrollBarsView.h: Change base class to NSScrollView instead of WebCoreScrollView.
        * WebView/WebDynamicScrollBarsView.m: (-[WebDynamicScrollBarsView autoforwardsScrollWheelEvents]): Added.

2006-02-28  John Sullivan  <sullivan@apple.com>

        Reviewed by Eric Seidel
        
        Wean WebKit from one more SPI call. We learned about this new-to-Tiger
        API from filing Radar 4433222.

        * WebView/WebHTMLView.m:
        (-[WebHTMLView _autoscroll]):
        use public CGEventSourceButtonState() instead of WKMouseIsDown() (which was using SPI internally)

2006-02-27  Tim Omernick  <timo@apple.com>

        Reviewed by Adele.

        <rdar://problem/4222043> Safari should reduce null events sent to invisible plugins

        * Plugins/WebBaseNetscapePluginView.h:
        * Plugins/WebBaseNetscapePluginView.m:
        (-[WebBaseNetscapePluginView restartNullEvents]):
        Check to see if the plugin view is completely obscured (scrolled out of view, for example).  If it is
        obscured and it wasn't before, or the other way around, then restart the null event timer so it can
        fire at the appropriate rate.
        (-[WebBaseNetscapePluginView viewHasMoved:]):
        If a plugin is obscured, send it null events as if it were in an inactive window.

2006-02-26  Mitz Pettel  <opendarwin.org@mitzpettel.com>

        Test: fast/frames/empty-frame-document.html

        Reviewed by Darin.

        - fix http://bugzilla.opendarwin.org/show_bug.cgi?id=7293
          REGRESSION: Using Javascript Bookmarklets that reference location.href on a blank tab crashes WebKit

        The crash happened because an empty frame did not have a document.

        * WebView/WebFrame.m:
        (-[WebFrame _commitProvisionalLoad:]): Use "about:blank" instead of an empty URL for empty
        frames. This causes a document to be created for the frame.

2006-02-21  Kevin Decker  <kdecker@apple.com>

        Reviewed by Darin.

        Backed out my previous check in. Since these methods are internal to WebKit (and not private)
        it's perfectly OK for them to remain as categories. 
        * ChangeLog:
        * WebView/WebPreferences.m:
        (-[WebPreferences _integerValueForKey:]):
        (-[WebPreferences _setIntegerValue:forKey:]):
        (-[WebPreferences _floatValueForKey:]):
        (-[WebPreferences _setFloatValue:forKey:]):
        (-[WebPreferences _boolValueForKey:]):
        (-[WebPreferences _setBoolValue:forKey:]):
        * WebView/WebPreferencesPrivate.h:

2006-02-20  Darin Adler  <darin@apple.com>

        Collaborated with Graham Dennis <Graham.Dennis@gmail.com> on this.

        - WebKit part of fix for http://bugzilla.opendarwin.org/show_bug.cgi?id=6831
          contentEditable outline darkens as caret moves

        * WebCoreSupport/WebGraphicsBridge.m:
        (-[WebGraphicsBridge drawFocusRingWithPath:radius:color:]):
        Replaced the old bridge function that set up style with this one that renders a path.

2006-02-19  Darin Adler  <darin@apple.com>

        Reviewed by Maciej.

        - cut out a little unneeded bridge code

        * WebCoreSupport/WebFrameBridge.m:
        (-[WebFrameBridge webView]): Added. Helper, since the WebCore side of the bridge no longer
        has this method.
        (-[WebFrameBridge createWindowWithURL:]): Removed the frameName parameter -- this is now
        handled on the WebCore side. Also return a page bridge instead of a frame bridge.
        (-[WebFrameBridge createModalDialogWithURL:]): Changed to return a page bridge instead of
        a frame bridge.

        * WebView/WebFrame.m: (-[WebFrame webView]): Change to get the webView from the page bridge
        instead of the frame bridge, since it's a per-page thing.

        * WebView/WebView.m: Removed init method since it just does what the default does (calls
        initWithFrame: with a zero rect).
        (-[WebView initWithCoder:]): Added checking so that if the obejcts have the wrong type
        we will fail gracefully instead of hitting "method not found" and the like.
        (-[WebView setPreferencesIdentifier:]): Fix storage leak. The WebPreferences object was
        not released.
        (-[WebView mainFrame]): Removed excess "return nil".
        (-[WebView _pageBridge]): Added. Helper to let you go from the WebView to the bridge
        from outside the WebView class.
        * WebView/WebViewInternal.h: Put _pageBridge into an internal header.

        * WebCoreSupport/WebPageBridge.m: (-[WebPageBridge outerView]): Added. Replaces "webView"
        as public method to tell the WebCore side about the view everything's embedded in.

        - other cleanup

        * WebCoreSupport/WebPageBridge.h: Removed some unneeded declarations.

        * Plugins/WebBaseNetscapePluginView.m: (-[WebBaseNetscapePluginView loadPluginRequest:]):
        Rearrange code so it doesn't have to get the main frame twice.

2006-02-18  Maciej Stachowiak  <mjs@apple.com>

        Not reviewed.
        
        - fix build broken by my last checkin, the remaining code was not doing anything.

        * WebView/WebDataSource.m:
        * WebView/WebDataSourcePrivate.h:
        * WebView/WebFrame.m:
        (-[WebFrame _createPageCacheForItem:]):

2006-02-16  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by Darin.
        
        - removed a few unused fields and methods of WebDataSource

        * WebView/WebDataSource.m:
        * WebView/WebDataSourcePrivate.h:
        * WebView/WebView.m:
        (+[WebView _MIMETypeForFile:]):
        (-[WebView _updateWebCoreSettingsFromPreferences:]):

2006-02-15  Justin Garcia  <justin.garcia@apple.com>

        Reviewed by darin
        
        <http://bugzilla.opendarwin.org/show_bug.cgi?id=7148>
        Add drag and drop support to DumpRenderTree
        
        Added a UI delegate method so that DumpRenderTree can perform dragging on its own.
        Made _updateFocusState SPI, to allow us to test the behavior and appearance of
        windows that have or don't have focus.

        * WebView/WebHTMLView.m:
        (-[WebHTMLView _updateFocusState]):
        (-[NSArray viewDidMoveToWindow]):
        (-[NSArray windowDidBecomeKey:]):
        (-[NSArray windowDidResignKey:]):
        (-[NSArray dragImage:at:offset:event:pasteboard:source:slideBack:]):
        (-[NSArray becomeFirstResponder]):
        (-[NSArray resignFirstResponder]):
        (-[WebHTMLView _formControlIsResigningFirstResponder:]):
        * WebView/WebHTMLViewInternal.h:
        * WebView/WebHTMLViewPrivate.h:
        * WebView/WebUIDelegatePrivate.h:
        * WebView/WebView.m:

2006-02-15  Darin Adler  <darin@apple.com>

        * English.lproj/StringsNotToBeLocalized.txt: Updated for recent changes.

2006-02-15  Maciej Stachowiak  <mjs@apple.com>

        Rubber stamped by Anders.

        * WebView/WebControllerPolicyHandlerDelegate.h: Removed.

2006-02-15  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by Anders.
        
        - remove some voodoo code

        * WebView/WebDataSource.m:
        (-[WebDataSource _setLoading:]): Removed useless ref/deref of self and WebView.
        A WebDataSource cannot be loading unless it is still connected to the WebView that
        owns it and retained by it, because getting disconnected stops loading.

2006-02-13  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by Anders.
        
        Improvements to frame loading:
        
        - remove LayoutAcceptable state entirely
        - fix WebImageView to work right without LayoutAcceptable state
        - move guts of commitIfReady: to WebFrame
        - try to separate page cache loading from normal loading a bit more

        * English.lproj/StringsNotToBeLocalized.txt:
        * WebView/WebDataSource.m:
        (-[WebDataSource _prepareForLoadStart]):
        (-[WebDataSource _loadFromPageCache:]):
        (-[WebDataSource _startLoading]):
        (-[WebDataSource _commitIfReady]):
        (-[WebDataSource _setupForReplaceByMIMEType:]):
        * WebView/WebDataSourcePrivate.h:
        * WebView/WebFrame.m:
        (-[WebFrame _transitionToCommitted:]):
        (-[WebFrame _commitProvisionalLoad:]):
        (-[WebFrame _checkLoadCompleteForThisFrame]):
        (-[WebFrame _continueLoadRequestAfterNavigationPolicy:formState:]):
        * WebView/WebFramePrivate.h:
        * WebView/WebImageRepresentation.h:
        * WebView/WebImageRepresentation.m:
        * WebView/WebImageView.m:
        (-[WebImageView dataSourceUpdated:]):
        (-[WebImageView setNeedsLayout:]):
        (-[WebImageView writeImageToPasteboard:types:]):
        (-[WebImageView copy:]):
        (-[WebImageView mouseDragged:]):
        * WebView/WebView.m:
        (-[WebView _finishedLoadingResourceFromDataSource:]):
        (-[WebView _mainReceivedBytesSoFar:fromDataSource:complete:]):

2006-02-13  John Sullivan  <sullivan@apple.com>

        Reviewed by Tim Omernick.

        Support for highlighting multiple text matches.

        * WebView/WebHTMLViewPrivate.h:
        * WebView/WebHTMLView.m:
        (-[WebHTMLView highlightAllMatchesForString:caseSensitive:]):
        new method, calls through to bridge
        (-[WebHTMLView clearHighlightedMatches]):
        ditto

        * WebView/WebViewPrivate.h:
        * WebView/WebView.m:
        (-[WebView highlightAllMatchesForString:caseSensitive:]):
        new method, calls through to documentView. For now this is hardwired to only work
        with WebHTMLViews.
        (-[WebView clearHighlightedMatches]):
        ditto

2006-02-13  Darin Adler  <darin@apple.com>

        Reviewed by Maciej.

        - move pointer from frame to page over to WebCore

        * WebCoreSupport/WebPageBridge.m: (-[WebPageBridge initWithMainFrameName:webView:frameView:]):
        Call super init to create the page before creating the main frame and calling setMainFrame: with it.

        * WebCoreSupport/WebFrameBridge.h: Remove page pointer, and change init function parameters.
        * WebCoreSupport/WebFrameBridge.m:
        (-[WebFrameBridge initMainFrameWithPage:frameName:view:]): New function that is used only for
        the main frame. Passes the page over to the other side of the bridge.
        (-[WebFrameBridge initSubframeWithRenderer:frameName:view:]): New function that is used only for
        subframes. Passes the renderer over to the other side of the bridge.
        (-[WebFrameBridge mainFrame]):
        (-[WebFrameBridge webView]):
        (-[WebFrameBridge createWindowWithURL:frameName:]):
        (-[WebFrameBridge showWindow]):
        (-[WebFrameBridge areToolbarsVisible]):
        (-[WebFrameBridge setToolbarsVisible:]):
        (-[WebFrameBridge isStatusbarVisible]):
        (-[WebFrameBridge setStatusbarVisible:]):
        (-[WebFrameBridge setWindowFrame:]):
        (-[WebFrameBridge windowFrame]):
        (-[WebFrameBridge setWindowContentRect:]):
        (-[WebFrameBridge windowContentRect]):
        (-[WebFrameBridge setWindowIsResizable:]):
        (-[WebFrameBridge windowIsResizable]):
        (-[WebFrameBridge firstResponder]):
        (-[WebFrameBridge makeFirstResponder:]):
        (-[WebFrameBridge closeWindowSoon]):
        (-[WebFrameBridge runJavaScriptAlertPanelWithMessage:]):
        (-[WebFrameBridge runJavaScriptConfirmPanelWithMessage:]):
        (-[WebFrameBridge canRunBeforeUnloadConfirmPanel]):
        (-[WebFrameBridge runBeforeUnloadConfirmPanelWithMessage:]):
        (-[WebFrameBridge runJavaScriptTextInputPanelWithPrompt:defaultText:returningText:]):
        (-[WebFrameBridge addMessageToConsole:]):
        (-[WebFrameBridge runOpenPanelForFileButtonWithResultListener:]):
        (-[WebFrameBridge setStatusText:]):
        (-[WebFrameBridge syncLoadResourceWithURL:customHeaders:postData:finalURL:responseHeaders:statusCode:]):
        (-[WebFrameBridge focusWindow]):
        (-[WebFrameBridge createChildFrameNamed:withURL:referrer:renderPart:allowsScrolling:marginWidth:marginHeight:]):
        (-[WebFrameBridge userAgentForURL:]):
        (-[WebFrameBridge _nextKeyViewOutsideWebFrameViewsWithValidityCheck:]):
        (-[WebFrameBridge previousKeyViewOutsideWebFrameViews]):
        (-[WebFrameBridge defersLoading]):
        (-[WebFrameBridge setDefersLoading:]):
        (-[WebFrameBridge viewForPluginWithURL:attributeNames:attributeValues:MIMEType:]):
        (-[WebFrameBridge _preferences]):
        (-[WebFrameBridge selectWordBeforeMenuEvent]):
        (-[WebFrameBridge historyLength]):
        (-[WebFrameBridge canGoBackOrForward:]):
        (-[WebFrameBridge goBackOrForward:]):
        (-[WebFrameBridge print]):
        (-[WebFrameBridge pollForAppletInView:]):
        (-[WebFrameBridge respondToChangedContents]):
        (-[WebFrameBridge respondToChangedSelection]):
        (-[WebFrameBridge undoManager]):
        (-[WebFrameBridge issueCutCommand]):
        (-[WebFrameBridge issueCopyCommand]):
        (-[WebFrameBridge issuePasteCommand]):
        (-[WebFrameBridge issuePasteAndMatchStyleCommand]):
        (-[WebFrameBridge canPaste]):
        (-[WebFrameBridge overrideMediaType]):
        (-[WebFrameBridge isEditable]):
        (-[WebFrameBridge shouldChangeSelectedDOMRange:toDOMRange:affinity:stillSelecting:]):
        (-[WebFrameBridge shouldBeginEditing:]):
        (-[WebFrameBridge shouldEndEditing:]):
        (-[WebFrameBridge windowObjectCleared]):
        (-[WebFrameBridge spellCheckerDocumentTag]):
        (-[WebFrameBridge isContinuousSpellCheckingEnabled]):
        (-[WebFrameBridge didFirstLayout]):
        (-[WebFrameBridge dashboardRegionsChanged:]):
        (-[WebFrameBridge createModalDialogWithURL:]):
        (-[WebFrameBridge canRunModal]):
        (-[WebFrameBridge runModal]):
        Change all calls to [_page webView] to use [self webView] instead.

=== WebKit-521.7

2006-02-11  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by Hyatt.
        
        - factor WebArchive creation code out of other classes into new WebArchiver
        http://bugzilla.opendarwin.org/show_bug.cgi?id=7208

        * DOM/WebDOMOperations.m:
        (-[DOMNode webArchive]):
        (-[DOMRange webArchive]):
        * WebKit.xcodeproj/project.pbxproj:
        * WebView/WebArchiver.h: Added.
        * WebView/WebArchiver.m: Added.
        (+[WebArchiver _subframeArchivesForFrame:]):
        (+[WebArchiver archiveFrame:]):
        (+[WebArchiver _archiveCurrentStateForFrame:]):
        (+[WebArchiver _archiveWithMarkupString:fromFrame:nodes:]):
        (+[WebArchiver archiveRange:]):
        (+[WebArchiver archiveNode:]):
        (+[WebArchiver archiveSelectionInFrame:]):
        * WebView/WebDataSource.m:
        (-[WebDataSource webArchive]):
        * WebView/WebDataSourcePrivate.h:
        * WebView/WebHTMLView.m:
        (-[WebHTMLView _writeSelectionWithPasteboardTypes:toPasteboard:cachedAttributedString:]):
        (-[WebHTMLView _writeSelectionToPasteboard:]):
        * WebView/WebHTMLViewPrivate.h:

2006-02-11  Darin Adler  <darin@apple.com>

        * English.lproj/StringsNotToBeLocalized.txt: Updated paths for recent changes in directory structure.

2006-02-11  David Kilzer  <ddkilzer@kilzer.net>

        Reviewed by John Sullivan.

        - Fix http://bugzilla.opendarwin.org/show_bug.cgi?id=7171
        No description in WebKitErrors.m for WebKitErrorPlugInWillHandleLoad

        * English.lproj/Localizable.strings: Added new UI_STRING().
        * Misc/WebKitErrors.m: Added #define for description.
        (registerErrors): Added dictionary entry.

2006-02-09  Tim Omernick  <timo@apple.com>

        Reviewed by Tim Hatcher.

        <rdar://problem/4153419> CrashTracer: 576 crashes in Safari at com.apple.WebKit: NPN_DestroyStream + 56

        I never could reproduce this crasher, which seems to be caused by the Speed Download plugin.  However,
        I did find a way to make the affected code more bulletproof for those who are experiencing the crash.
        
        * Plugins/WebBaseNetscapePluginStream.h:
        Keep a WebBaseNetscapePluginView instead of the WebNetscapePluginPackage, since the plugin view could
        potentially be deallocated before the stream finishes loading.
        * Plugins/WebBaseNetscapePluginStream.m:
        (-[WebBaseNetscapePluginStream _pluginCancelledConnectionError]):
        Use pluginView instead of plugin.
        (-[WebBaseNetscapePluginStream dealloc]):
        Assert that the plugin instance has been nulled out, since that's now part of the stream's teardown
        phase.
        Release pluginView instead of plugin.
        (-[WebBaseNetscapePluginStream setPluginPointer:]):
        Retain the plugin view instead of the plugin package, since the plugin view could be deallocated while
        the stream is running.
        This method now accepts a NULL argument so that we can easily clear out the pluginView backpointer
        (and other ivars derived from it).
        (-[WebBaseNetscapePluginStream startStreamResponseURL:expectedContentLength:lastModifiedDate:MIMEType:]):
        Use pluginView instead of plugin.
        (-[WebBaseNetscapePluginStream _destroyStream]):
        ditto
        (-[WebBaseNetscapePluginStream finishedLoadingWithData:]):
        ditto
        (-[WebBaseNetscapePluginStream cancelLoadAndDestroyStreamWithError]):
        Set the plugin instance to NULL, so that the pluginView backpointer is released.  This method is called
        for every plugin view's stream when the plugin view is stopped/destroyed.
        (-[WebBaseNetscapePluginStream _deliverData]):
        Use pluginView instead of plugin.

== Rolled over to ChangeLog-2006-02-09 ==
