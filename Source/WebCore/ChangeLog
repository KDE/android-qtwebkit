2011-02-17  Andreas Kling  <kling@webkit.org>

        Reviewed by Antti Koivisto.

        [Qt] Crash when calling QWebFrame::setUrl() while a previous load has pending requests
        https://bugs.webkit.org/show_bug.cgi?id=49216

        CachedResourceRequest::didFail() will protect the CachedResourceLoader's
        document() while it runs, but if we're being called from the Document destructor,
        the protecting RefPtr<Document> will cause a double-delete instead.

        * loader/cache/CachedResourceLoader.cpp:
        (WebCore::CachedResourceLoader::~CachedResourceLoader): Clear the m_document
        pointer so CachedResourceRequest::didFail() won't try to protect it.
        (WebCore::CachedResourceLoader::frame): Add null-check for m_document.

2011-02-17  Andrey Adaikin  <aandrey@google.com>

        Reviewed by Pavel Feldman.

        Web Inspector: [Text editor] Add updateHighlight method to the highlighter
        https://bugs.webkit.org/show_bug.cgi?id=54448

        * inspector/front-end/SourceTokenizer.js:
        * inspector/front-end/TextEditorHighlighter.js:
        (WebInspector.TextEditorHighlighter.prototype.set mimeType):
        (WebInspector.TextEditorHighlighter.prototype.reset):
        (WebInspector.TextEditorHighlighter.prototype.updateHighlight):
        (WebInspector.TextEditorHighlighter.prototype._highlightInChunks):
        (WebInspector.TextEditorHighlighter.prototype._highlightLines):

2011-02-16  Pavel Podivilov  <podivilov@chromium.org>

        Reviewed by Yury Semikhatsky.

        Web Inspector: show all inlined scripts from single document in the same source frame.
        https://bugs.webkit.org/show_bug.cgi?id=54544

        Currently when debugging synchronously executed inlined scripts each script is shown in it's own source frame ("example.html:24").
        We should show such scripts in the same source frame "example.html" with <script></script> framing.

        Test: inspector/debugger/debug-inlined-scripts.html

        * inspector/front-end/ScriptsPanel.js:
        (WebInspector.ScriptsPanel.prototype._scriptSourceChanged):
        (WebInspector.ScriptsPanel.prototype._addScript):
        (WebInspector.ScriptsPanel.prototype._resourceForURL):
        (WebInspector.ScriptsPanel.prototype._resourceLoadingFinished):
        (WebInspector.ScriptsPanel.prototype.addConsoleMessage):
        (WebInspector.ScriptsPanel.prototype.clearConsoleMessages):
        (WebInspector.ScriptsPanel.prototype.reset):
        (WebInspector.ScriptsPanel.prototype._sourceFrameForResource):
        (WebInspector.ScriptsPanel.prototype._sourceFrameForScript):
        (WebInspector.ScriptsPanel.prototype._recreateSourceFrame):
        (WebInspector.ScriptsPanel.prototype._showScriptOrResource):
        (WebInspector.ScriptsPanel.prototype._addScriptToFilesMenu.optionCompare):
        (WebInspector.ScriptsPanel.prototype._addScriptToFilesMenu):
        (WebInspector.SourceFrameContentProviderForScript.prototype.requestContent):
        (WebInspector.SourceFrameContentProviderForScript.prototype._buildSource):

2011-02-17  Nikolas Zimmermann  <nzimmermann@rim.com>

        Reviewed by Dirk Schulze.

        svg/batik/paints/patternRegions-positioned-objects.svg fails on Windows
        https://bugs.webkit.org/show_bug.cgi?id=44484

        Pattern of pattern defined with objectBoundingBox does not render correctly
        https://bugs.webkit.org/show_bug.cgi?id=53463

        Fix <pattern> + patternContentUnits="objectBoundingBox" support.
        We were incorrrectly translating the tile image transform, by the target objects bbox.x()/y().
        RenderSVGResourceMask/Clipper don't have this error.
        
        Fix nesting <patterns> in objectBoundingBox mode, propagate the tileImageTransform as new user-space
        when drawing the pattern children. <mask> + <clipPath> don't have the problem.

        Test: svg/custom/nested-pattern-boundingBoxModeContent.svg

        * rendering/svg/RenderSVGResourcePattern.cpp:
        (WebCore::RenderSVGResourcePattern::buildTileImageTransform):
        (WebCore::RenderSVGResourcePattern::createTileImage):

2011-02-17  Csaba Osztrogon√°c  <ossy@webkit.org>

        Unreviewed.

        [Qt][V8] Buildfix after r78752.

        * CodeGenerators.pri: Add missing IDL files.

2011-02-17  Benjamin Kalman  <kalman@chromium.org>

        Reviewed by Ryosuke Niwa.

        RTL lineboundary left/right is reversed when cursor is at start of RTL container
        https://bugs.webkit.org/show_bug.cgi?id=54534

        Test: editing/selection/extend-left-right-by-lineboundary.html

        Add missing cases for extending left/right by lineboundary.

        * editing/SelectionController.cpp:
        (WebCore::SelectionController::modifyExtendingRight):
        (WebCore::SelectionController::modifyExtendingLeft):

2011-02-16  Philippe Normand  <pnormand@igalia.com>

        Reviewed by Martin Robinson.

        [GTK] libsoup critical warnings
        https://bugs.webkit.org/show_bug.cgi?id=54557

        Avoid pausing a soup message for already downloaded resources.

        * platform/network/soup/ResourceHandleSoup.cpp:
        (WebCore::ResourceHandle::platformSetDefersLoading):

2011-02-16  Brian Ryner  <bryner@chromium.org>

        Reviewed by Darin Fisher.

        Split the socket address field into separate IP address and port fields.
        This will make the field less error-prone to parse, for example when
        dealing with IPv6 literals.
        https://bugs.webkit.org/show_bug.cgi?id=54607

        No new tests required.

        * platform/network/chromium/ResourceResponse.cpp:
        (WebCore::ResourceResponse::doPlatformCopyData):
        (WebCore::ResourceResponse::doPlatformAdopt):
        * platform/network/chromium/ResourceResponse.h:
        (WebCore::ResourceResponse::ResourceResponse):
        (WebCore::ResourceResponse::remoteIPAddress):
        (WebCore::ResourceResponse::setRemoteIPAddress):
        (WebCore::ResourceResponse::remotePort):
        (WebCore::ResourceResponse::setRemotePort):

2011-02-16  Dominic Mazzoni  <dmazzoni@google.com>

        Reviewed by Chris Fleizach.

        Add support for canvas fallback content.
        https://bugs.webkit.org/show_bug.cgi?id=50126

        Test: accessibility/canvas-fallback-content.html

        * accessibility/AccessibilityObject.h:
        * accessibility/AccessibilityRenderObject.cpp:
        (WebCore::AccessibilityRenderObject::determineAccessibilityRole):
        (WebCore::AccessibilityRenderObject::canHaveChildren):
        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (atkRole):
        * accessibility/mac/AccessibilityObjectWrapper.mm:
        * html/HTMLFormControlElement.cpp:
        (WebCore::HTMLFormControlElement::isFocusable):
        * rendering/RenderHTMLCanvas.cpp:
        (WebCore::RenderHTMLCanvas::recursiveSetNoNeedsLayout):
        (WebCore::RenderHTMLCanvas::layout):
        (WebCore::RenderHTMLCanvas::nodeAtPoint):
        * rendering/RenderHTMLCanvas.h:
        (WebCore::RenderHTMLCanvas::children):
        (WebCore::RenderHTMLCanvas::canHaveChildren):
        (WebCore::RenderHTMLCanvas::virtualChildren):
        * rendering/RenderObject.cpp:
        (WebCore::RenderObject::repaint):
        * rendering/RenderTreeAsText.cpp:
        (WebCore::write):

2011-02-16  Matthew Delaney  <mdelaney@apple.com>

        Reviewed by Simon Fraser.

        Allow acceleratesDrawing for WebKit2
        https://bugs.webkit.org/show_bug.cgi?id=54511

        Plumb through preference for accelerated drawing.
        
        When accelerated drawing is enabled, set a flag on new GraphicsLayers.

        Not testable via Layout Tests

        * WebCore.exp.in:
        * page/Settings.cpp:
        (WebCore::Settings::Settings):
        (WebCore::Settings::setAcceleratedDrawingEnabled):
        * page/Settings.h:
        (WebCore::Settings::acceleratedDrawingEnabled):
        * rendering/RenderLayerCompositor.cpp:
        (WebCore::RenderLayerCompositor::updateBacking):

2011-02-16  Victoria Kirst  <vrk@google.com>

        Reviewed by Kenneth Russell.

        [chromium] Fix green pixels at edge of certain GPU-accelerated videos
        https://bugs.webkit.org/show_bug.cgi?id=54559

        Adds logic to properly resize the range of YUV textures to only
        select legitimate values.

        * platform/graphics/chromium/VideoFrameChromium.h:
        * platform/graphics/chromium/VideoLayerChromium.cpp:
        (WebCore::VideoLayerChromium::SharedValues::SharedValues):
        (WebCore::VideoLayerChromium::allocateTexturesIfNeeded):
        (WebCore::VideoLayerChromium::drawYUV):
        * platform/graphics/chromium/VideoLayerChromium.h:
        (WebCore::VideoLayerChromium::SharedValues::yWidthScaleFactorLocation):
        (WebCore::VideoLayerChromium::SharedValues::uvWidthScaleFactorLocation):

2011-02-16  Bill Budge  <bbudge@chromium.org>

        Reviewed by David Levin.

        Need didReceiveCachedMetadata, and finishTime for didFinishLoading exposed in ThreadableLoaderClient
        https://bugs.webkit.org/show_bug.cgi?id=54313

        No tests needed, exposes no new functionality

        * fileapi/FileReaderLoader.cpp:
        (WebCore::FileReaderLoader::didFinishLoading):
        * fileapi/FileReaderLoader.h:
        * loader/DocumentThreadableLoader.cpp:
        (WebCore::DocumentThreadableLoader::setDefersLoading):
        (WebCore::DocumentThreadableLoader::didReceiveCachedMetadata):
        (WebCore::DocumentThreadableLoader::didFinishLoading):
        (WebCore::DocumentThreadableLoader::loadRequest):
        * loader/DocumentThreadableLoader.h:
        * loader/ThreadableLoaderClient.h:
        (WebCore::ThreadableLoaderClient::didReceiveData):
        (WebCore::ThreadableLoaderClient::didReceiveCachedMetadata):
        (WebCore::ThreadableLoaderClient::didFinishLoading):
        * loader/ThreadableLoaderClientWrapper.h:
        (WebCore::ThreadableLoaderClientWrapper::didReceiveData):
        (WebCore::ThreadableLoaderClientWrapper::didReceiveCachedMetadata):
        (WebCore::ThreadableLoaderClientWrapper::didFinishLoading):
        * loader/WorkerThreadableLoader.cpp:
        (WebCore::workerContextDidReceiveCachedMetadata):
        (WebCore::WorkerThreadableLoader::MainThreadBridge::didReceiveCachedMetadata):
        (WebCore::workerContextDidFinishLoading):
        (WebCore::WorkerThreadableLoader::MainThreadBridge::didFinishLoading):
        * loader/WorkerThreadableLoader.h:
        * notifications/Notification.cpp:
        (WebCore::Notification::didFinishLoading):
        * notifications/Notification.h:
        * page/EventSource.cpp:
        (WebCore::EventSource::didFinishLoading):
        * page/EventSource.h:
        * workers/WorkerScriptLoader.cpp:
        (WebCore::WorkerScriptLoader::didFinishLoading):
        * workers/WorkerScriptLoader.h:
        * xml/XMLHttpRequest.cpp:
        (WebCore::XMLHttpRequest::didFinishLoading):
        * xml/XMLHttpRequest.h:

2011-02-16  Jeremy Orlow  <jorlow@chromium.org>

        Fix uninitialized memory error.

        * storage/IDBDatabaseBackendImpl.cpp:
        (WebCore::IDBDatabaseBackendImpl::close):

2011-02-16  Adam Barth  <abarth@webkit.org>

        Reviewed by Eric Seidel.

        Fix xssAuditor/form-action.html
        https://bugs.webkit.org/show_bug.cgi?id=54590

        We should block form actions.  Although this technically can't be used
        to run script, it's a pretty easy vector for stealing passwords.

        * html/parser/XSSFilter.cpp:
        (WebCore::XSSFilter::filterTokenInitial):
        (WebCore::XSSFilter::filterFormToken):
        * html/parser/XSSFilter.h:

2011-02-16  Abhishek Arya  <inferno@chromium.org>

        Reviewed by James Robinson.

        Remove the early bail added in r75823 since we can run into anonymous
        blocks when traversing the parents chain for clearing floats.
        https://bugs.webkit.org/show_bug.cgi?id=54601

        removeFloatingOrPositionedChildFromBlockLists tries to find the topmost
        parent containing "this" block and then tries to remove it from its floats
        list and mark all descendants blocks for layout. I added a bailout condition
        in r75823 because we thought that if one of the parent render block does not 
        contain "this" float, then it is safe to assume that none of the grand parents
        will have it. This is a wrong assumption since anonymous blocks do not have
        float objects and we need to go higher in the chain to find the top most parent
        containing this float. Instead of breaking out of the loop, it is ok to keep
        traversing the chain till we find that parent. Otherwise, we will leave deleted
        floats in the grand parents floats list.

        Test: fast/block/float/floats-not-cleared-from-grand-parents.html

        * rendering/RenderBox.cpp:
        (WebCore::RenderBox::removeFloatingOrPositionedChildFromBlockLists):

2011-02-16  Andreas Kling  <kling@webkit.org>

        Reviewed by Ryosuke Niwa.

        Editing styles should not emit #RRGGBBAA colors
        https://bugs.webkit.org/show_bug.cgi?id=54540

        * editing/ApplyStyleCommand.cpp:
        (WebCore::StyleChange::extractTextStyles): Use Color::serialized()
        instead of Color::nameForRenderTreeAsText().

2011-02-16  Ryosuke Niwa  <rniwa@webkit.org>

        Reviewed by Kent Tamura.

        Improve showTree of Range, Position, and VisiblePosition
        https://bugs.webkit.org/show_bug.cgi?id=54536

        Enhanced showTree of Range, Position, and VisiblePosition.

        * dom/Position.cpp:
        (WebCore::Position::showAnchorTypeAndOffset): Added; dumps "legacy" if the position
        is a legacy position and also dumps anchor type.
        (WebCore::Position::showTreeForThis): Calls showAnchorTypeAndOffset.
        * dom/Position.h:
        * dom/Range.cpp:
        (showTree): No longer calls deprecatedEditingOffset.
        * editing/VisiblePosition.cpp:
        (WebCore::VisiblePosition::debugPosition): No longer included in release build.
        Calls Position::showAnchorTypeAndOffset instead of manually calling deprecatedEditingOffset.
        * editing/VisiblePosition.h:
        * editing/VisibleSelection.cpp:
        (WebCore::VisibleSelection::debugPosition): Ditto.
        (WebCore::VisibleSelection::showTreeForThis): Ditto.
        * editing/VisibleSelection.h:
        * page/EventHandler.cpp:

2011-02-16  David Grogan  <dgrogan@chromium.org>

        Reviewed by Jeremy Orlow.

        fix compile error introduced in 78752
        https://bugs.webkit.org/show_bug.cgi?id=54604

        * storage/IDBRequest.h:

2011-02-16  Jeremy Orlow  <jorlow@chromium.org>

        Back out IndexedDB change thats no longer necessary
        https://bugs.webkit.org/show_bug.cgi?id=54603

        Backing out 78645 as it turns out that it's not necessary.

        * storage/IDBFactoryBackendImpl.cpp:
        (WebCore::IDBFactoryBackendImpl::open):
        * storage/IDBFactoryBackendImpl.h:
        * storage/IDBFactoryBackendInterface.h:

2011-02-16  Brian Salomon  <bsalomon@google.com>

        Reviewed by James Robinson.

        Skia's gpu backed just needs the correct context bound before drawing. It will bind the correct FBO itself and doing so externally confuses it unless resetContext is called.

        No new tests required.

        * platform/graphics/skia/PlatformContextSkia.cpp:
        (WebCore::PlatformContextSkia::syncSoftwareCanvas):

2011-02-16  Mike Reed  <reed@google.com>

        Reviewed by Kenneth Russell.

        Use non-asserting pack function for decoding images, since webgl may want
        a non-premultiplied version of the image.
        https://bugs.webkit.org/show_bug.cgi?id=54023

        No new tests.
        fast/canvas/webgl/gl-teximage.html
        fast/canvas/webgl/tex-image-with-format-and-type.html
        fast/canvas/webgl/texture-transparent-pixels-initialized.html

        * platform/image-decoders/ImageDecoder.h:
        (WebCore::ImageFrame::setRGBA):

2011-02-16  David Grogan  <dgrogan@chromium.org>

        Reviewed by Jeremy Orlow.

        indexeddb: make setVersion fire blocked event if other connections are open
        https://bugs.webkit.org/show_bug.cgi?id=53728

        Tests: storage/indexeddb/set_version_blocked.html
               storage/indexeddb/set_version_queue.html

        * WebCore.gypi:
        * bindings/js/JSEventCustom.cpp:
        (WebCore::toJS):
        * bindings/v8/custom/V8EventCustom.cpp:
        (WebCore::toV8):
        * dom/Event.cpp:
        (WebCore::Event::isIDBVersionChangeEvent):
        * dom/Event.h:
        * dom/EventNames.h:
        * dom/EventTarget.cpp:
        (WebCore::EventTarget::toIDBVersionChangeRequest):
        * dom/EventTarget.h:
        * storage/IDBCallbacks.h:
        * storage/IDBDatabase.cpp:
        (WebCore::IDBDatabase::setVersion):
        (WebCore::IDBDatabase::close):
        * storage/IDBDatabase.h:
        * storage/IDBDatabase.idl:
        * storage/IDBDatabaseBackendImpl.cpp:
        (WebCore::IDBDatabaseBackendImpl::PendingSetVersionCall::create):
        (WebCore::IDBDatabaseBackendImpl::PendingSetVersionCall::version):
        (WebCore::IDBDatabaseBackendImpl::PendingSetVersionCall::callbacks):
        (WebCore::IDBDatabaseBackendImpl::PendingSetVersionCall::PendingSetVersionCall):
        (WebCore::IDBDatabaseBackendImpl::IDBDatabaseBackendImpl):
        (WebCore::IDBDatabaseBackendImpl::setVersion):
        (WebCore::IDBDatabaseBackendImpl::open):
        (WebCore::IDBDatabaseBackendImpl::close):
        * storage/IDBDatabaseBackendImpl.h:
        * storage/IDBDatabaseBackendInterface.h:
        * storage/IDBFactoryBackendImpl.cpp:
        (WebCore::IDBFactoryBackendImpl::open):
        * storage/IDBRequest.cpp:
        (WebCore::IDBRequest::onBlocked):
        (WebCore::IDBRequest::dispatchEvent):
        (WebCore::IDBRequest::source):
        * storage/IDBRequest.h:
        * storage/IDBVersionChangeEvent.cpp: Copied from Source/WebKit/chromium/src/WebIDBCallbacksImpl.h.
        (WebCore::IDBVersionChangeEvent::create):
        (WebCore::IDBVersionChangeEvent::IDBVersionChangeEvent):
        (WebCore::IDBVersionChangeEvent::~IDBVersionChangeEvent):
        (WebCore::IDBVersionChangeEvent::version):
        * storage/IDBVersionChangeEvent.h: Copied from Source/WebKit/chromium/src/WebIDBCallbacksImpl.h.
        (WebCore::IDBVersionChangeEvent::isIDBVersionChangeEvent):
        * storage/IDBVersionChangeEvent.idl: Added.
        * storage/IDBVersionChangeRequest.cpp: Copied from Source/WebKit/chromium/src/WebIDBCallbacksImpl.h.
        (WebCore::IDBVersionChangeRequest::create):
        (WebCore::IDBVersionChangeRequest::IDBVersionChangeRequest):
        (WebCore::IDBVersionChangeRequest::~IDBVersionChangeRequest):
        (WebCore::IDBVersionChangeRequest::onBlocked):
        * storage/IDBVersionChangeRequest.h: Copied from Source/WebKit/chromium/src/WebIDBCallbacksImpl.h.
        * storage/IDBVersionChangeRequest.idl: Copied from Source/WebKit/chromium/src/WebIDBCallbacksImpl.h.

2011-02-16  Robin Cao  <robin.cao@torchmobile.com.cn>

        Reviewed by James Robinson.

        PlatformContextSkia::applyAntiAliasedClipPaths does not work for paths which have evenOdd property
        https://bugs.webkit.org/show_bug.cgi?id=54336

        We need to take fill type of paths into account when drawing them.

        No new tests, covered by svg/W3C-SVG-1.1/masking-path-05-f.svg.

        * platform/graphics/skia/PlatformContextSkia.cpp:
        (WebCore::PlatformContextSkia::applyAntiAliasedClipPaths):

2011-02-16  Eric Seidel  <eric@webkit.org>

        Reviewed by Adam Barth.

        REGRESSION (r61234): washingtonpost.com top bar looks wrong, doesn't animate
        https://bugs.webkit.org/show_bug.cgi?id=53717

        Test: http/tests/local/absolute-url-strip-whitespace.html

        This was theoretically tested already in fast/url, however the
        tests were disabled due to lack of any clean way to test absolute
        url parsing in JavaScript.  I added a test which mimics the sites
        behavior using our local http server.  There seems to be no other
        way to test this at the moment.

        * platform/KURL.cpp:
        (WebCore::shouldTrimFromURL):
         - Any char 0-20 should be removed (matches google-url and other browsers).
        (WebCore::KURL::init):

2011-02-16  Abhishek Arya  <inferno@chromium.org>

        Reviewed by James Robinson.

        Traverse the next sibling tree to find the text fragment for a first letter.
        https://bugs.webkit.org/show_bug.cgi?id=54568

        We cannot assume that the next sibling to the first letter will a text fragment
        since there can be intermediatary Apple-style-span inline elements wrapping the
        text fragment. So, we traverse the next sibling tree to find it.
        Test: fast/css/first-letter-text-fragment-crash.html

        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::updateFirstLetter):

2011-02-16  Martin Robinson  <mrobinson@igalia.com>

        Reviewed by Xan Lopez.

        [GTK] r78718 introduced some assertion failures in some HTTP tests
        https://bugs.webkit.org/show_bug.cgi?id=54592

        No new tests. This fix is covered by tests that are currently failing.

        * platform/network/soup/ResourceRequestSoup.cpp:
        (WebCore::ResourceRequest::updateFromSoupMessage): Instead of setting the existing
        headers and then selectively removing ones that do not exist in the updated soup
        message, just remove all headers from the map first.

2011-02-16  Jian Li  <jianli@chromium.org>

        Reviewed by Kenneth Russell.

        [V8] DataView constructor can be applied as a regular method
        https://bugs.webkit.org/show_bug.cgi?id=54563

        Tested by adding a new test case to fast/canvas/webgl/data-view-test.html.

        * bindings/v8/custom/V8DataViewCustom.cpp:
        (WebCore::V8DataView::constructorCallback):

== Rolled over to ChangeLog-2011-02-16 ==
