Test for proper handling of Unicode RegExps and bug 7445: Gmail puts wrong subject in replies.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS cy('Re: Moose') is 'Moose'
PASS cy('\u8f6c\u53d1: Moose') is 'Moose'
PASS inlineRe.source is newFromInlineRe.source
PASS inlineRe.source is evalFromInlineRe.source
PASS inlineRe.source is evalInlineRe.source
PASS inlineRe.source is newFromEvalInlineRe.source
PASS inlineRe.source is evalFromEvalInlineRe.source
FAIL inlineRe.source should be .m\u2820p (of type string). Was .m⠠p (of type string).
FAIL inlineRe.source should be .m\u2820p (of type string). Was .m⠠p (of type string).
PASS inlineRe.source is evalFromExplicitRe.source
PASS inlineRe.toString() is newFromInlineRe.toString()
PASS inlineRe.toString() is evalFromInlineRe.toString()
PASS inlineRe.toString() is evalInlineRe.toString()
PASS inlineRe.toString() is newFromEvalInlineRe.toString()
PASS inlineRe.toString() is evalFromEvalInlineRe.toString()
FAIL inlineRe.toString() should be /.m\u2820p/ (of type string). Was /.m⠠p/ (of type string).
FAIL inlineRe.toString() should be /.m\u2820p/ (of type string). Was /.m⠠p/ (of type string).
PASS inlineRe.toString() is evalFromExplicitRe.toString()
PASS inlineRe.exec(sample)[0] is 'bm⠠p'
PASS evalInlineRe.exec(sample)[0] is 'bm⠠p'
FAIL explicitRe.exec(sample)[0] should be bm⠠p. Threw exception TypeError: Null value
PASS binlineRe.source is bnewFromInlineRe.source
PASS binlineRe.source is bevalFromInlineRe.source
PASS binlineRe.source is bevalInlineRe.source
PASS binlineRe.source is bnewFromEvalInlineRe.source
PASS binlineRe.source is bevalFromEvalInlineRe.source
FAIL binlineRe.source should be .m\u007cp (of type string). Was .m|p (of type string).
FAIL binlineRe.source should be .m\u007cp (of type string). Was .m|p (of type string).
PASS binlineRe.source is bevalFromExplicitRe.source
PASS binlineRe.toString() is bnewFromInlineRe.toString()
PASS binlineRe.toString() is bevalFromInlineRe.toString()
PASS binlineRe.toString() is bevalInlineRe.toString()
PASS binlineRe.toString() is bnewFromEvalInlineRe.toString()
PASS binlineRe.toString() is bevalFromEvalInlineRe.toString()
FAIL binlineRe.toString() should be /.m\u007cp/ (of type string). Was /.m|p/ (of type string).
FAIL binlineRe.toString() should be /.m\u007cp/ (of type string). Was /.m|p/ (of type string).
PASS binlineRe.toString() is bevalFromExplicitRe.toString()
FAIL binlineRe.exec(bsample)[0] should be bm|p (of type string). Was am (of type string).
FAIL bevalInlineRe.exec(bsample)[0] should be bm|p (of type string). Was am (of type string).
FAIL bexplicitRe.exec(bsample)[0] should be bm|p. Threw exception TypeError: Null value
PASS successfullyParsed is true

TEST COMPLETE

