1.0 Single Argument Testing
The following tests every with one argument, the callback. It should print whether the arrays [12, 5, 8, 130, 44] and [12, 54, 18, 130, 44] solely contain numbers >= to 10 (false and true, respectively).

false
true

2.0 Two Argument Testing
The following tests every with two arguments, the callback and the applied "this" object. It should print whether the arrays [12, 5, 11, 130, 44] and [12, 54, 18, 130, 44] solely contain numbers >= to 11 (false and true, respectively).

false
true

3.0 Array Mutation Tests
These tests the affects of array mutation during execution of every.

3.1 Array Element Removal
This test is equivalent to 1.0, with the exception that it removes elements from the array on each visit. Both should thus yield "false" since undefined is not >= to 10.

false
false

3.3 Array Element Addition
This test is equivalent to 1.0, with that it test whether elements are >= 131 and it adds elements greater than 131 to the end of the list. However, both results should be false since every uses the original length to create the range it iterates over.

false
false

3.2 Array Element Changing
This test is equivalent to 1.0, with the exception that it changes elements in the array to be < 10 in reverse order. These elements should appear in their mutated form when reached by every, and thus both tests should result in "false".

false
false

4.0 Exception Test
This test uses a function that throws an exception, and thus halts the execution of every. There should thus be no output.


5.0 Wrong Type for Callback Test This test sends in incorrect types for the callback parameter of every. An exception should be thrown in each case. There should be 6 type errors (and no crashes!):

TypeError : Type error
TypeError : Type error
TypeError : Type error
TypeError : Type error
TypeError : Type error
TypeError : Type error

6.0 Early Abortion ("Short Circuiting") This test is nearly identical to 1.0, except that it prints upon every call to the designated callback function. Since every aborts as soon as it finds one element that does not qualify, the first array should print only twice, and the second all 5 times.

Testing element 12...
Testing element 5...
Done with first array.
Testing element 12...
Testing element 54...
Testing element 18...
Testing element 130...
Testing element 44...
Done with second array.

