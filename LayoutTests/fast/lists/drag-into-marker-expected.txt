EDITING DELEGATE: shouldBeginEditingInDOMRange:range from 0 of BODY > HTML > #document to 6 of BODY > HTML > #document
EDITING DELEGATE: webViewDidBeginEditing:WebViewDidBeginEditingNotification
EDITING DELEGATE: shouldChangeSelectedDOMRange:(null) toDOMRange:range from 2 of #text > SPAN > LI > UL > BODY > HTML > #document to 2 of #text > SPAN > LI > UL > BODY > HTML > #document affinity:NSSelectionAffinityDownstream stillSelecting:FALSE
EDITING DELEGATE: webViewDidChangeSelection:WebViewDidChangeSelectionNotification
EDITING DELEGATE: shouldChangeSelectedDOMRange:range from 2 of #text > SPAN > LI > UL > BODY > HTML > #document to 2 of #text > SPAN > LI > UL > BODY > HTML > #document toDOMRange:range from 0 of #text > SPAN > LI > UL > BODY > HTML > #document to 5 of #text > SPAN > LI > UL > BODY > HTML > #document affinity:NSSelectionAffinityDownstream stillSelecting:FALSE
EDITING DELEGATE: webViewDidChangeSelection:WebViewDidChangeSelectionNotification
EDITING DELEGATE: shouldInsertNode:#document-fragment replacingDOMRange:range from 0 of LI > UL > BODY > HTML > #document to 0 of LI > UL > BODY > HTML > #document givenAction:WebViewInsertActionDropped
EDITING DELEGATE: shouldChangeSelectedDOMRange:(null) toDOMRange:range from 0 of #text > SPAN > LI > UL > BODY > HTML > #document to 6 of #text > SPAN > LI > UL > BODY > HTML > #document affinity:NSSelectionAffinityDownstream stillSelecting:FALSE
EDITING DELEGATE: webViewDidChangeSelection:WebViewDidChangeSelectionNotification
EDITING DELEGATE: webViewDidChange:WebViewDidChangeNotification
layer at (0,0) size 800x600
  RenderView at (0,0) size 800x600
layer at (0,0) size 800x600
  RenderBlock {HTML} at (0,0) size 800x600
    RenderBody {BODY} at (8,16) size 784x568
      RenderBlock {UL} at (16,0) size 752x57 [border: (1px solid #000000)]
        RenderListItem {LI} at (41,1) size 710x55
          RenderListMarker at (-36,0) size 16x55
          RenderInline {SPAN} at (0,0) size 124x55
            RenderText {#text} at (0,0) size 124x55
              text run at (0,0) width 124: "world "
          RenderText {#text} at (124,0) size 95x55
            text run at (124,0) width 95: "hello"
      RenderBlock {P} at (0,73) size 784x72
        RenderText {#text} at (0,0) size 768x72
          text run at (0,0) width 562: "This is an automated test for elementAtPoint for points over position:outside list markers. "
          text run at (562,0) width 172: "The dictionary returned by "
          text run at (0,18) width 743: "elementAtPoint should contain the list item as the DOMNode, not the list, for points over position:outside list markers."
          text run at (0,36) width 743: "elementAtPoint is used to determine the drag operation that will occur when something is dropped over a given point. "
          text run at (743,36) width 25: "So, "
          text run at (0,54) width 371: "this test drags a bit of text over the list marker and drops it. "
          text run at (371,54) width 386: "It should be pasted into the list item, which is contenteditable."
selection start: position 0 of child 0 {#text} of child 0 {SPAN} of child 0 {LI} of child 1 {UL} of child 0 {BODY} of child 0 {HTML} of document
selection end:   position 6 of child 0 {#text} of child 0 {SPAN} of child 0 {LI} of child 1 {UL} of child 0 {BODY} of child 0 {HTML} of document
