#!/usr/bin/perl -w

# Copyright (C) 2005 Apple Computer, Inc.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer. 
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution. 
# 3.  Neither the name of Apple Computer, Inc. ("Apple") nor the names of
#     its contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission. 
#
# THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Simplified build script for Web Kit Open Source Project.

use strict;
use Getopt::Long;

my $debug = 0;
GetOptions("debug!" => \$debug);

my $style = $debug ? "Development" : "Deployment";

# Check that we're in the right directory.
if (! -d "WebKitTools") {
    if (-d "../WebKitTools") {
        chdir ".." or die;
    }
    if (! -d "WebKitTools") {
        die "No WebKitTools directory found. Please run this script from the directory containing WebKitTools.\n";
    }
}

# Check that an Xcode product directory is set.
open PRODUCT, "defaults read com.apple.Xcode PBXProductDirectory 2> /dev/null |" or die;
my $productDir = <PRODUCT>;
chomp $productDir;
close PRODUCT;
if (!$productDir) {
    die "No product directory set. Please set the 'Place Build Products' preference to 'Customized location' in XCode Building Preferences.\n";
}

# Check that all the project directories are there.
my @projects = ("JavaScriptCore", "WebCore", "WebKit");
my @otherDirs = ("WebKitLibraries");
for my $dir (@projects, @otherDirs) {
    if (! -d $dir) {
        die "No $dir directory found. Can't build\n";
    }
}

# Copy library and header from WebKitLibraries to a findable place in the product directory.
chdir "WebKitLibraries" or die;
print "${productDir}/libWebKitSystemInterface.a\n";
`ditto libWebKitSystemInterface.a "${productDir}/libWebKitSystemInterface.a"`;
`ranlib "${productDir}/libWebKitSystemInterface.a"`;
`mkdir -p "${productDir}/usr/local/include"`;
`ditto WebKitSystemInterface.h "${productDir}/usr/local/include/WebKitSystemInterface.h"`;
chdir ".." or die;

# Make symlinks so Xcode 2.1 can find the WebKitLibraries files.
`mkdir -p "${productDir}/${style}"`;
`ln -fs "../usr" "${productDir}/${style}"`;
`ln -fs "../libWebKitSystemInterface.a" "${productDir}/${style}"`;

# Build, and abort if the build fails.
for my $dir (@projects) {
    chdir $dir or die;
    my $result;
    if ($dir eq "JavaScriptCore") {
        $result = system "xcodebuild", "-target", "All", "-buildstyle", $style;
    } else {
        $result = system "xcodebuild", "-buildstyle", $style;
    }
    exit $result if $result;
    chdir ".." or die;
}

# Write out congratulations message.
print "\n";
print "===========================================================\n";
print " Web Kit is now built. To run Safari with this newly-built\n";
print " code, use the run-safari script.\n";
print "===========================================================\n";
