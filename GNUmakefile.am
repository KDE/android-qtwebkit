AUTOMAKE_OPTIONS = subdir-objects

srcdir = @srcdir@
VPATH = @srcdir@

# Directory for autogenerated sources
GENSOURCES := $(top_builddir)/DerivedSources

# Script for creating hash tables
CREATE_HASH_TABLE = $(srcdir)/JavaScriptCore/kjs/create_hash_table

# Libraries and support components
noinst_LTLIBRARIES :=

noinst_HEADERS :=

noinst_PROGRAMS :=

lib_LIBRARIES :=

IDL_BINDINGS :=

# Files that will be distributed
EXTRA_DIST :=

#
# Global flags to CPP
global_cppflags := 

global_cppflags += \
	-I $(srcdir)/JavaScriptCore \
	-I $(srcdir)/JavaScriptCore/ForwardingHeaders \
	-I $(srcdir)/JavaScriptCore/wtf \
	-I $(srcdir)/JavaScriptCore/kjs \
	-I $(top_builddir)/DerivedSources

# Default compiler flags
global_cflags := \
	-Wall -W -Wcast-align -Wchar-subscripts -Wreturn-type \
	-Wformat -Wformat-security -Wno-format-y2k -Wundef \
	-Wmissing-format-attribute -Wpointer-arith -Wwrite-strings \
	-Wno-unused-parameter -fno-exceptions -fno-strict-aliasing

# Libraries
lib_LTLIBRARIES = libJavaScriptCore.la libWebKitGtk.la

# JavaScriptCore

# Following are the variables we use in JavaScripCore/GNUmakefile.am
#
# javascriptcore_h_api - api headers to be included in the JSC library
# javascriptcore_cppflags - CPP flags for JSC
# javascriptcore_sources - source files to be included
# javascriptcore_built_sources - autogenerated sources and/or header files that are part of _SOURCES
# javascriptcore_built_nosources - same as above but not part of _SOURCES
#
# If you add or remove sources or header files, make sure you update the
# following variables in JavaScriptCore/GNUmakefile.am

javascriptcore_h_api :=
javascriptcore_cppflags:=
javascriptcore_sources :=
javascriptcore_built_sources := 
javascriptcore_built_nosources :=

# The variables above are already included below so we don't need to touch
# these variables too often
libJavaScriptCore_ladir = $(prefix)/include/WebKit/JavaScriptCore
libJavaScriptCore_la_HEADERS := $(javascriptcore_h_api)

libJavaScriptCore_la_SOURCES := \
	$(javascriptcore_built_sources) \
	$(javascriptcore_sources)

libJavaScriptCore_la_LDFLAGS := -lpthread

libJavaScriptCore_la_CXXFLAGS := $(global_cflags)

libJavaScriptCore_la_CFLAGS := $(global_cflags)

libJavaScriptCore_la_CPPFLAGS := $(global_cppflags) $(javascriptcore_cppflags)

# WebKitGtk 

# The Following variables have the same meaning as JSC, with addition of:
#
# webcore_sources - These are port-independent sources and header files
# webkitgtk_headers - header files that will be included in _SOURCES

webcore_sources :=
webkitgtk_h_api :=
webkitgtk_headers :=
webkitgtk_sources :=
webkitgtk_cppflags :=
webkitgtk_built_sources :=
webkitgtk_built_nosources :=

# No need to touch the following variables unless you have to. If you need to change the values
# for the following variables, use the "webkitgtk_" variables above
libWebKitGtk_ladir := $(prefix)/include/WebKit

libWebKitGtk_la_HEADERS := $(webkitgtk_h_api)

libWebKitGtk_la_SOURCES := \
	$(webcore_sources) \
	$(webkitgtk_built_sources) \
	$(webkitgtk_headers) \
	$(webkitgtk_sources)

libWebKitGtk_la_CXXFLAGS := \
	-fno-rtti \
	$(global_cflags) \
	$(DEPENDENCIES_CFLAGS) \
	$(ICU_CFLAGS) \
	$(SQLITE3_CFLAGS) \
	$(GSTREAMER_CFLAGS) \
	$(LIBXSLT_CFLAGS) \
	$(COVERAGE_CFLAGS)

libWebKitGtk_la_CFLAGS := \
	$(global_cflags) \
	$(DEPENDENCIES_CFLAGS) \
	$(ICU_CFLAGS) \
	$(SQLITE3_CFLAGS) \
	$(GSTREAMER_CFLAGS) \
	$(LIBXSLT_CFLAGS) \
	$(COVERAGE_CFLAGS)

libWebKitGtk_la_CPPFLAGS := \
	$(global_cppflags) \
	$(webkitgtk_cppflags)

libWebKitGtk_la_LIBADD := @LTLIBOBJS@ libJavaScriptCore.la 

libWebKitGtk_la_LDFLAGS := \
	$(DEPENDENCIES_LIBS) \
	$(ICU_LIBS) \
	$(SQLITE3_LIBS) \
	$(GSTREAMER_LIBS) \
	$(LIBXSLT_LIBS) \
	$(COVERAGE_LDFLAGS)

libWebKitGtk_la_LDFLAGS += \
	-lpthread \
	-ljpeg \
	-version-info @LIBWEBKITGTK_VERSION@

# Extra checks and flags

global_cppflags += \
	-DBUILDING_GTK__=1 \
	-DUSE_SYSTEM_MALLOC \
	-DWTF_CHANGES

if !ENABLE_DEBUG
global_cppflags += -DNDEBUG
else 
webkitgtk_cppflags += \
	-DG_DISABLE_DEPRECATED \
	-DGDK_PIXBUF_DISABLE_DEPRECATED \
	-DGDK_DISABLE_DEPRECATED \
	-DGTK_DISABLE_DEPRECATED \
	-DPANGO_DISABLE_DEPRECATED \
	-DGDK_MULTIHEAD_SAFE \
	-DGTK_MULTIHEAD_SAFE
endif

if TARGET_X11
global_cppflags += -DXP_UNIX
endif

if OS_LINUX
global_cppflags += -DHAVE_STDINT_H
endif

if OS_FREEBSD
global_cppflags += -DHAVE_PTHREAD_NP_H
endif

if ENABLE_COVERAGE
global_cppflags += \
	-DGCC_GENERATE_TEST_COVERAGE_FILES \
	-DGCC_INSTRUMENT_PROGRAM_FLOW_ARCS
endif

if ENABLE_VIDEO
libWebKitGtk_la_LDFLAGS += -lgstinterfaces-0.10 -lgstvideo-0.10
endif

# WebKit/GTK+ sources

webkitgtk_cppflags += \
-I $(top_builddir)/WebKit/gtk/WebView \
-DBUILDING_CAIRO__=1 \
-DBUILD_WEBKIT

webkitgtk_h_api += \
	WebKit/gtk/WebView/webkit.h \
	WebKit/gtk/WebView/webkitdefines.h \
	WebKit/gtk/WebView/webkitnetworkrequest.h \
	WebKit/gtk/WebView/webkitwebframe.h \
	WebKit/gtk/WebView/webkitwebview.h 

webkitgtk_built_sources += \
	WebKit/gtk/WebView/webkit-marshal.h \
	WebKit/gtk/WebView/webkit-marshal.cpp

webkitgtk_headers += \
	WebKit/gtk/WebView/webkitprivate.h \
	WebKit/gtk/WebView/webkitsettings.h \
	WebKit/gtk/WebCoreSupport/ChromeClientGtk.h \
	WebKit/gtk/WebCoreSupport/ContextMenuClientGtk.h \
	WebKit/gtk/WebCoreSupport/DragClientGtk.h \
	WebKit/gtk/WebCoreSupport/EditorClientGtk.h \
	WebKit/gtk/WebCoreSupport/FrameLoaderClientGtk.h \
	WebKit/gtk/WebCoreSupport/InspectorClientGtk.h \
	WebKit/gtk/WebCoreSupport/PasteboardHelperGtk.h 

webkitgtk_sources += \
	WebKit/gtk/WebView/webkitnetworkrequest.cpp \
	WebKit/gtk/WebView/webkitprivate.cpp \
	WebKit/gtk/WebView/webkitsettings.cpp \
	WebKit/gtk/WebView/webkitwebframe.cpp \
	WebKit/gtk/WebView/webkitwebview.cpp \
	WebKit/gtk/WebCoreSupport/ChromeClientGtk.cpp \
	WebKit/gtk/WebCoreSupport/ContextMenuClientGtk.cpp \
	WebKit/gtk/WebCoreSupport/DragClientGtk.cpp \
	WebKit/gtk/WebCoreSupport/EditorClientGtk.cpp \
	WebKit/gtk/WebCoreSupport/FrameLoaderClientGtk.cpp \
	WebKit/gtk/WebCoreSupport/InspectorClientGtk.cpp \
	WebKit/gtk/WebCoreSupport/PasteboardHelperGtk.cpp 

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = WebKit/gtk/WebKitGtk.pc

WEBKIT_MARSHAL = $(CURDIR)/WebKit/gtk/WebView/webkit-marshal
WEBKIT_MARSHAL_LIST = $(srcdir)/WebKit/gtk/WebView/webkit-marshal.list

stamp_files := \
	stamp-webkit-marshal.cpp \
	stamp-webkit-marshal.h

WebKit/gtk/WebView/webkit-marshal.cpp: stamp-webkit-marshal.cpp
	@true

WebKit/gtk/WebView/webkit-marshal.h: stamp-webkit-marshal.h
	@true

stamp-webkit-marshal.cpp: $(WEBKIT_MARSHAL_LIST)
	echo "extern \"C\" {" > $(WEBKIT_MARSHAL).cpp && \
	$(GLIB_GENMARSHAL) --prefix=webkit_marshal $(WEBKIT_MARSHAL_LIST) \
	--body >> $(WEBKIT_MARSHAL).cpp && echo '}' >> $(WEBKIT_MARSHAL).cpp && \
	echo timestamp > $(@F)

stamp-webkit-marshal.h: $(WEBKIT_MARSHAL_LIST)
	$(GLIB_GENMARSHAL) --prefix=webkit_marshal $(WEBKIT_MARSHAL_LIST) \
	--header > $(WEBKIT_MARSHAL).h && \
	echo timestamp > $(@F)

# Autogenerated sources
BUILT_SOURCES := \
	$(javascriptcore_built_sources) \
	$(javascriptcore_built_nosources) \
	$(webkitgtk_built_sources) \
	$(webkitgtk_built_nosources)

# Files that will be cleaned
MAINTAINERCLEANFILES := $(stamp_files) $(BUILT_SOURCES)
DISTCLEANFILES := $(stamp_files) $(BUILT_SOURCES)
CLEANFILES := $(stamp_files) $(BUILT_SOURCES)

# Include module makefiles
include JavaScriptCore/GNUmakefile.am
include WebCore/GNUmakefile.am
include WebKitTools/GNUmakefile.am

# Project-wide clean rules
clean-local:
	-rm -rf $(GENSOURCES)
	-rm -f $(top_builddir)/Programs/GtkLauncher $(top_builddir)/Programs/DumpRenderTree
	-rm -f $(top_builddir)/Programs/testkjs $(top_builddir)/Programs/dftables
	-rm -f $(top_builddir/WebKit/gtk/WebKitGtk-1.0.pc

distclean-local:
	-rm -f $(srcdir)/aconfig.h.in configure config.* GNUmakefile.in \
		INSTALL README

