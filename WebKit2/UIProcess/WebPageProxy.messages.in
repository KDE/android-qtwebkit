# Copyright (C) 2010 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

messages -> WebPageProxy {
    # UI messages.
    CreateNewPage() -> (uint64_t newPageID, WebKit::WebPageCreationParameters newPageParameters)
    ShowPage()
    ClosePage()
    RunJavaScriptAlert(uint64_t frameID, WTF::String message) -> ()
    RunJavaScriptConfirm(uint64_t frameID, WTF::String message) -> (bool result)
    RunJavaScriptPrompt(uint64_t frameID, WTF::String message, WTF::String defaultValue) -> (WTF::String result)
    MouseDidMoveOverElement(uint32_t modifiers, WebKit::InjectedBundleUserMessageEncoder userData);
    ContentsSizeChanged(uint64_t frameID, WebCore::IntSize newSize)
    DidChangeViewportData(WebCore::ViewportArguments arguments)
    DidReceiveEvent(uint32_t type, bool handled)
    DidValidateMenuItem(WTF::String commandName, bool isEnabled, int32_t state)
    SetCursor(WebCore::Cursor cursor)
    SetStatusText(WTF::String statusText)
    SetToolTip(WTF::String toolTip)
    TakeFocus(bool direction)
    SetWindowFrame(WebCore::FloatRect windowFrame)
    GetWindowFrame() -> (WebCore::FloatRect windowFrame)
    CanRunBeforeUnloadConfirmPanel() -> (bool canRun)
    RunBeforeUnloadConfirmPanel(WTF::String message, uint64_t frameID) -> (bool shouldClose)

    # Policy messages.
    DecidePolicyForMIMEType(uint64_t frameID, WTF::String MIMEType, WTF::String url, uint64_t listenerID)
    DecidePolicyForNavigationAction(uint64_t frameID, uint32_t navigationType, uint32_t modifiers, int32_t mouseButton, WTF::String url, uint64_t listenerID)
    DecidePolicyForNewWindowAction(uint64_t frameID, uint32_t navigationType, uint32_t modifiers, int32_t mouseButton, WTF::String url, uint64_t listenerID)

    # Progress messages.
    DidChangeProgress(double value)
    DidFinishProgress()
    DidStartProgress()

    # Frame lifetime messages.
    DidCreateMainFrame(uint64_t frameID)
    DidCreateSubFrame(uint64_t frameID)

    # Frame load messages.
    DidCommitLoadForFrame(uint64_t frameID, WTF::String mimeType, WebKit::PlatformCertificateInfo certificateInfo, WebKit::InjectedBundleUserMessageEncoder userData)
    DidFailLoadForFrame(uint64_t frameID, WebCore::ResourceError error, WebKit::InjectedBundleUserMessageEncoder userData)
    DidFailProvisionalLoadForFrame(uint64_t frameID, WebCore::ResourceError error, WebKit::InjectedBundleUserMessageEncoder userData)
    DidFinishDocumentLoadForFrame(uint64_t frameID, WebKit::InjectedBundleUserMessageEncoder userData)
    DidFinishLoadForFrame(uint64_t frameID, WebKit::InjectedBundleUserMessageEncoder userData)
    DidFirstLayoutForFrame(uint64_t frameID, WebKit::InjectedBundleUserMessageEncoder userData)
    DidFirstVisuallyNonEmptyLayoutForFrame(uint64_t frameID, WebKit::InjectedBundleUserMessageEncoder userData)
    DidReceiveServerRedirectForProvisionalLoadForFrame(uint64_t frameID, WTF::String url, WebKit::InjectedBundleUserMessageEncoder userData)
    DidRemoveFrameFromHierarchy(uint64_t frameID, WebKit::InjectedBundleUserMessageEncoder userData)
    DidStartProvisionalLoadForFrame(uint64_t frameID, WTF::String url, bool loadingSubstituteDataForUnreachableURL, WebKit::InjectedBundleUserMessageEncoder userData)
    DidReceiveTitleForFrame(uint64_t frameID, WTF::String title, WebKit::InjectedBundleUserMessageEncoder userData)

    # Forms messages.
    WillSubmitForm(uint64_t frameID, uint64_t sourceFrameID, WebKit::StringPairVector textFieldValues, uint64_t listenerID, WebKit::InjectedBundleUserMessageEncoder userData)

    # Callback messages.
    DidGetRenderTreeExternalRepresentation(WTF::String resultString, uint64_t callbackID)
    DidGetSourceForFrame(WTF::String resultString, uint64_t callbackID)
    DidRunJavaScriptInMainFrame(WTF::String resultString, uint64_t callbackID)

    # BackForward messages.
    BackForwardAddItem(uint64_t itemID)
    BackForwardGoToItem(uint64_t itemID)
    BackForwardBackItem() -> (uint64_t itemID)
    BackForwardCurrentItem() -> (uint64_t itemID)
    BackForwardForwardItem() -> (uint64_t itemID)
    BackForwardItemAtIndex(uint64_t itemID) -> (uint64_t itemID)
    BackForwardBackListCount() -> (int32_t itemID)
    BackForwardForwardListCount() -> (int32_t itemID)

    # Undo/Redo messages.
    RegisterEditCommandForUndo(uint64_t commandID, uint32_t editAction)
    ClearAllEditCommands()

    # Find.
    DidCountStringMatches(WTF::String string, uint32_t matchCount)
    SetFindIndicator(WebCore::FloatRect selectionRect, Vector<WebCore::FloatRect> textRects, WebKit::SharedMemory::Handle contentImageHandle, bool fadeOut)
    MatchCountDidChange(WTF::String string, uint32_t matchCount)

    # PopupMenu.
    ShowPopupMenu(WebCore::IntRect rect, Vector<WebKit::WebPopupItem> items, int32_t selectedIndex)
    HidePopupMenu()

#if USE(ACCELERATED_COMPOSITING)
    # Accelerated compsiting messages.
    DidChangeAcceleratedCompositing(bool compositing) -> (WebKit::DrawingAreaBase::DrawingAreaInfo newDrawingArea)
#endif
}
