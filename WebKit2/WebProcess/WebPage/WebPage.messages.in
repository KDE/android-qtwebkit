# Copyright (C) 2010 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

messages -> WebPage {
    SetActive(bool active)
    SetFocused(bool focused)
    SetIsInWindow(bool isInWindow)

    KeyEvent(WebKit::WebKeyboardEvent event)
    MouseEvent(WebKit::WebMouseEvent event)
    WheelEvent(WebKit::WebWheelEvent event)
#if ENABLE(TOUCH_EVENTS)
    TouchEvent(WebKit::WebTouchEvent event)
#endif

    GoBack(uint64_t backForwardItemID)
    GoForward(uint64_t backForwardItemID)
    GoToBackForwardItem(uint64_t backForwardItemID)
    LoadHTMLString(WTF::String htmlString, WTF::String baseURL)
    LoadAlternateHTMLString(WTF::String htmlString, WTF::String baseURL, WTF::String unreachableURL); 
    LoadPlainTextString(WTF::String string)
    LoadURL(WTF::String url)
    LoadURLRequest(WebCore::ResourceRequest request)
    Reload(bool reloadFromOrigin)
    StopLoading()

    DidReceivePolicyDecision(uint64_t frameID, uint64_t listenerID, uint32_t policyAction)

    GetRenderTreeExternalRepresentation(uint64_t callbackID)

    GetSourceForFrame(uint64_t frameID, uint64_t callbackID)

    PreferencesDidChange(WebKit::WebPreferencesStore store)

    RunJavaScriptInMainFrame(WTF::String script, uint64_t callbackID)

    SetCustomUserAgent(WTF::String customUserAgent)

    Close()
    TryClose()

    ValidateMenuItem(WTF::String name)
    ExecuteEditCommand(WTF::String name)

    DidRemoveEditCommand(uint64_t commandID)
    ReapplyEditCommand(uint64_t commandID)
    UnapplyEditCommand(uint64_t commandID)

    SetPageAndTextZoomFactors(double pageZoomFactor, double textZoomFactor)
    SetPageZoomFactor(double zoomFactor)
    SetTextZoomFactor(double zoomFactor)

    # Find.
    FindString(WTF::String string, uint32_t findDirection, uint32_t findOptions, unsigned maxMatchCount)
    HideFindUI()
    CountStringMatches(WTF::String string, bool caseInsensitive, unsigned maxMatchCount)

    # Popup menu.
    DidChangeSelectedIndexForActivePopupMenu(int32_t newIndex);

    SetWindowResizerSize(WebCore::IntSize intersectsView)

#if PLATFORM(MAC)
    SetWindowIsVisible(bool windowIsVisible)
    SetWindowFrame(WebCore::IntRect windowFrame)
#endif
}
