/*
 * Copyright (C) 2009 Dirk Schulze <krit@webkit.org>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

module svg {

    interface [
        Conditional=SVG&FILTERS,
        GenerateConstructor,
        DontCheckEnums
    ] SVGFEConvolveMatrixElement : SVGElement,
                                   SVGFilterPrimitiveStandardAttributes {
        // Edge Mode Values
        const unsigned short SVG_EDGEMODE_UNKNOWN   = 0;
        const unsigned short SVG_EDGEMODE_DUPLICATE = 1;
        const unsigned short SVG_EDGEMODE_WRAP      = 2;
        const unsigned short SVG_EDGEMODE_NONE      = 3;

        readonly attribute SVGAnimatedString      in1;
        readonly attribute SVGAnimatedInteger     orderX;
        readonly attribute SVGAnimatedInteger     orderY;
        readonly attribute SVGAnimatedNumberList  kernelMatrix;
        readonly attribute SVGAnimatedNumber      divisor;
        readonly attribute SVGAnimatedNumber      bias;
        readonly attribute SVGAnimatedInteger     targetX;
        readonly attribute SVGAnimatedInteger     targetY;
        readonly attribute SVGAnimatedEnumeration edgeMode;
        readonly attribute SVGAnimatedNumber      kernelUnitLengthX;
        readonly attribute SVGAnimatedNumber      kernelUnitLengthY;
        readonly attribute SVGAnimatedBoolean     preserveAlpha;
    };

}
