/*
 * Copyright (C) 2006 Apple Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

module svg {

    interface [Conditional=SVG] SVGTextContentElement : SVGElement,
                                                        SVGTests,
                                                        SVGLangSpace,
                                                        SVGExternalResourcesRequired,
                                                        SVGStylable {
        // lengthAdjust Types
        const unsigned short LENGTHADJUST_UNKNOWN          = 0;
        const unsigned short LENGTHADJUST_SPACING          = 1;
        const unsigned short LENGTHADJUST_SPACINGANDGLYPHS = 2;

        readonly attribute SVGAnimatedLength      textLength;
        readonly attribute SVGAnimatedEnumeration lengthAdjust;

        long getNumberOfChars();
        float getComputedTextLength();
        float getSubStringLength(in [IsIndex] unsigned long offset, 
                                 in [IsIndex] unsigned long length)
            raises(DOMException);
        SVGPoint getStartPositionOfChar(in [IsIndex] unsigned long offset)
            raises(DOMException);
        SVGPoint getEndPositionOfChar(in [IsIndex] unsigned long offset)
            raises(DOMException);
        SVGRect getExtentOfChar(in [IsIndex] unsigned long offset)
            raises(DOMException);
        float getRotationOfChar(in [IsIndex] unsigned long offset)
            raises(DOMException);
        long getCharNumAtPosition(in SVGPoint point);
        void selectSubString(in [IsIndex] unsigned long offset, 
                             in [IsIndex] unsigned long length)
            raises(DOMException);
    };

}
