/*
 * This file is part of the WebKit open source project.
 * This file has been generated by generate-bindings.pl. DO NOT MODIFY!
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

#import "config.h"
#import "DOMHTMLEmbedElement.h"

#import <wtf/GetPtr.h>

#import "DOMInternal.h"
#import "HTMLEmbedElement.h"
#import "PlatformString.h"

@implementation DOMHTMLEmbedElement

#define IMPL static_cast<WebCore::HTMLEmbedElement*>(reinterpret_cast<WebCore::Node*>(_internal))

- (NSString *)align
{
    return IMPL->align();
}

- (void)setAlign:(NSString *)newAlign
{
    IMPL->setAlign(newAlign);
}

- (int)height
{
    return IMPL->height().toInt();
}

- (void)setHeight:(int)newHeight
{
    IMPL->setHeight(WebCore::String::number(newHeight));
}

- (NSString *)name
{
    return IMPL->name();
}

- (void)setName:(NSString *)newName
{
    IMPL->setName(newName);
}

- (NSString *)src
{
    return IMPL->src();
}

- (void)setSrc:(NSString *)newSrc
{
    IMPL->setSrc(newSrc);
}

- (NSString *)type
{
    return IMPL->type();
}

- (void)setType:(NSString *)newType
{
    IMPL->setType(newType);
}

- (int)width
{
    return IMPL->width().toInt();
}

- (void)setWidth:(int)newWidth
{
    IMPL->setWidth(WebCore::String::number(newWidth));
}

@end

@implementation DOMHTMLEmbedElement (WebCoreInternal)

- (WebCore::HTMLEmbedElement *)_HTMLEmbedElement
{
    return IMPL;
}

+ (DOMHTMLEmbedElement *)_HTMLEmbedElementWith:(WebCore::HTMLEmbedElement *)impl
{
    return static_cast<DOMHTMLEmbedElement*>([DOMNode _nodeWith:impl]);
}


@end
