#   This file is part of the KDE libraries
#
#   Copyright (C) 1999 Waldo Bastian (bastian@kde.org)
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Library General Public
#   License as published by the Free Software Foundation; either
#   version 2 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Library General Public License for more details.
#
#   You should have received a copy of the GNU Library General Public License
#   along with this library; see the file COPYING.LIB.  If not, write to
#   the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
#   Boston, MA 02111-1307, USA.
#
#----------------------------------------------------------------------------
#
#  KDE HTML Widget -- Script to generate cssvalues.c and cssvalues.h
#
grep "^[^\#]" cssvalues.in > cssvalues.strip

echo '%{' > cssvalues.gperf
echo '/* This file is automatically generated from cssvalues.in by makevalues, do not edit */' >> cssvalues.gperf
echo '/* Copyright 1999 W. Bastian */' >> cssvalues.gperf
echo '#include "cssvalues.h"' >> cssvalues.gperf
echo '%}' >> cssvalues.gperf
echo 'struct css_value {' >> cssvalues.gperf
echo '    const char *name;' >> cssvalues.gperf
echo '    int id;' >> cssvalues.gperf
echo '};' >> cssvalues.gperf
echo '%%' >> cssvalues.gperf

cat cssvalues.strip | awk '{ do { prop = $0; gsub("-", "_"); print prop ", CSS_VAL_" toupper($0) } while (getline) }' >> cssvalues.gperf

echo '%%' >> cssvalues.gperf

echo '/* This file is automatically generated from cssvalues.in by makevalues, do not edit */' > cssvalues.h
echo '/* Copyright 1998 W. Bastian */' >> cssvalues.h
echo '#ifndef CSSVALUES_H' >> cssvalues.h
echo '#define CSSVALUES_H' >> cssvalues.h
echo 'DOM::DOMString getValueName(unsigned short id);' >> cssvalues.h

cat cssvalues.strip | awk '{ \
i=1; \
print "#define CSS_VAL_INVALID 0"; \
print "#define CSS_VAL_MIN 1"; \
do { gsub("-", "_"); print "#define CSS_VAL_" toupper($0) " " i; i = i + 1 } while (getline); \
print ""; \
print "#define CSS_VAL_TOTAL " i \
}' >> cssvalues.h

gperf -L 'ANSI-C' -E -C -n -o -t -k '*' -NfindValue -Hhash_val -Wwordlist_value -D cssvalues.gperf > cssvalues.c || exit 1

echo '#endif' >> cssvalues.h

cat cssvalues.strip | awk '{ \
i=1; \
print "static const char * const valueList[] = {"; \
print "\"\","; \
do { print "\"" $0 "\", "; i = i + 1 } while (getline); \
print "    0"; \
print "};"; \
print "DOMString getValueName(unsigned short id)"; \
print "{"; \
print "    if(id >= CSS_VAL_TOTAL || id == 0)"; \
print "      return DOMString();";\
print "    else";\
print "      return DOMString(valueList[id]);"; \
print "};"; \
print ""; \
}' >> cssvalues.c
