2003-10-31  Darin Adler  <darin@apple.com>

        Reviewed by John.

        - fixed 3457875 -- text disappears from fields in forms upon certain types of scrolling

        * kwq/KWQTextField.mm: (-[KWQTextField control:textShouldBeginEditing:]):
        Call releaseGState on the field editor and its clip view to prevent undesirable caching.

2003-10-31  Ken Kocienda  <kocienda@apple.com>

        Reviewed by Darin

	Fix for this bug:

	<rdar://problem/3440719>: Read-only text field form controls 
	do not keyboard focus and do not take part in tabbing

        * kwq/KWQTextField.mm:
        (-[KWQTextField acceptsFirstResponder]): We want our text fields
        to accept first responder even if not editable.

	Once this is fixed, this one comes along for free:

	<rdar://problem/3440710>: Read-only textarea form controls should select all text when focused

2003-10-31  Darin Adler  <darin@apple.com>

        Reviewed by Ken.

        - fixed 3469383 -- REGRESSION (100-111): if one line is selected on this page, too much gets copied (plain text)

        * khtml/khtml_part.cpp: (KHTMLPart::text): Range check the child node indices before using them
        to get at a child node. We don't want to set startNode or endNode to nil in any case. If the end
        node is set to nil, we end up copying the entire remainder of the page.

2003-10-31  David Hyatt  <hyatt@apple.com>

	Fix for 3470007, links don't get focus on mouse down.  Fix the focus check on mouse down to actually
	crawl up the content tree in order to find the nearest enclosing focusable node.  Also clean up and
	fix checks that improperly blurred the link after it got focused.

	Fix for 3450335, AppKit widgets not obeying their desired focus policies.  I renamed isSelectable to
	isFocusable and then also added isMouseFocusable and isKeyboardFocusable methods.
	
        Reviewed by kocienda

        * khtml/css/html4.css:
        * khtml/html/html_baseimpl.cpp:
        (HTMLFrameElementImpl::isFocusable):
        * khtml/html/html_baseimpl.h:
        * khtml/html/html_formimpl.cpp:
        (HTMLGenericFormElementImpl::isFocusable):
        (HTMLGenericFormElementImpl::isKeyboardFocusable):
        (HTMLGenericFormElementImpl::isMouseFocusable):
        * khtml/html/html_formimpl.h:
        * khtml/html/html_inlineimpl.cpp:
        (HTMLAnchorElementImpl::isFocusable):
        * khtml/html/html_inlineimpl.h:
        * khtml/khtmlview.cpp:
        (KHTMLView::dispatchMouseEvent):
        * khtml/xml/dom_docimpl.cpp:
        (DocumentImpl::nextFocusNode):
        (DocumentImpl::previousFocusNode):
        * khtml/xml/dom_nodeimpl.cpp:
        (NodeImpl::isFocusable):
        (NodeImpl::isKeyboardFocusable):
        (NodeImpl::isMouseFocusable):
        * khtml/xml/dom_nodeimpl.h:
        * kwq/KWQKHTMLPart.mm:
        (KWQKHTMLPart::khtmlMousePressEvent):

2003-10-31  Ken Kocienda  <kocienda@apple.com>

        Reviewed by David

	Fix for this bug:

	<rdar://problem/3470233>: solid outlines drawing incorrectly

	The problem was that when I collected the array of line boxes for
	render inlines, I put a QRect() at the start and the end of the list.
	However, the border calculation code expected "invalid" rectangles
	(rects with 0 for all four dimentions) in the first and last
	positions, and the default constructor for QRect makes rects with 1,1
	for width/height.

        * khtml/rendering/render_inline.cpp:
        (RenderInline::paintOutlines)

2003-10-31  Darin Adler  <darin@apple.com>

        Reviewed by Dave.

        - fixed 3464759 -- REGRESSION (100-107): Pressing on link loses mouse-down feedback almost instantly

        * khtml/khtmlview.cpp: (KHTMLView::viewportMouseMoveEvent): Pass true for the "read-only"
        flag in prepareMoveEvent to prevent us from updating :hover and :active while the mouse is down.

2003-10-31  Ken Kocienda  <kocienda@apple.com>

        Reviewed by David

	<rdar://problem/3468910>: REGRESSION: other than focus rings, outlines styles are broken

	Outlines now draw like they used to.

        * khtml/rendering/render_inline.cpp:
        (RenderInline::paintObject): Now branches to call focus ring or "regular" outlines.
        (RenderInline::paintFocusRing): Broke out drawing aqua focus rings into its
	own function.
        (RenderInline::paintOutlines): New function to draw "regular outlines.
        (RenderInline::paintOutline): Removed code which special-cased aqua outlines.
        * khtml/rendering/render_inline.h: Added paintOutlines declaration.

2003-10-31  David Hyatt  <hyatt@apple.com>

	Fix for 3467419, highlighted text in "search in books" Amazon feature is obscured.  The
	site is using the CSS3 opacity property.  The CSS3 Color module is far enough along now
	that opacity can safely be used without the "-khtml-" in front of it.

	Fix for 3466542, the minimum font size bug.  I am introducing a new minimum font size pref that
	really is a hard override.
	
        Reviewed by gramps (opacity) and john (min font size)
	
        * khtml/css/cssparser.cpp:
        (CSSParser::parseValue):
        * khtml/css/cssproperties.c:
        (hash_prop):
        (findProp):
        * khtml/css/cssproperties.h:
        * khtml/css/cssproperties.in:
        * khtml/css/cssstyleselector.cpp:
        (khtml::CSSStyleSelector::applyRule):

2003-10-31  Ken Kocienda  <kocienda@apple.com>

        Reviewed by Darin

	Fix for this bug:

	<rdar://problem/3469088>: focus not removed from text link 
	when user hits cmd-L or clicks in window chrome

        * kwq/WebCoreBridge.h:
        * kwq/WebCoreBridge.mm:
        (-[WebCoreBridge deselectAll]): Now clears the focus ring as well.
        (-[WebCoreBridge deselectText]): Just clears text selection.

2003-10-31  David Hyatt  <hyatt@apple.com>

	Three simple fixes:
	
	(1) Fix for 3463777, crash on CSS3 box model draft.  This was just a situation where a simple null-check
	was needed for generated content.

	(2) Added a != check when the old and new hover obj are the same to avoid a little bit of extra work.

	(3) Removed the m_pressed member from DOM nodes and removed the calls to setPressed, since this code
	is dead and not used by anyone.
	
        * khtml/khtmlview.cpp:
        * khtml/rendering/render_layer.cpp:
        (RenderLayer::addChild):
        (RenderLayer::updateHoverActiveState):
        * khtml/xml/dom_nodeimpl.cpp:
        (NodeImpl::NodeImpl):
        * khtml/xml/dom_nodeimpl.h:
        (DOM::NodeImpl::hasStyle):
        (DOM::NodeImpl::setHasStyle):

2003-10-30  David Hyatt  <hyatt@apple.com>

	Fix for 3469330, the Marquee data in RenderStyle needs a copy constructor hack like all the other
	objects do.

        * khtml/rendering/render_style.cpp:
        (direction):
        * khtml/rendering/render_style.h:

2003-10-30  David Hyatt  <hyatt@apple.com>

	Fix for 3469206, images didn't paint outlines any more.  They were bailing early because I forgot to
	add a check for my new PaintAction.
	
        Reviewed by darin

        * khtml/rendering/render_replaced.cpp:
        (RenderReplaced::paint):

2003-10-30  David Hyatt  <hyatt@apple.com>

	Fixes for 3469057, outlines not drawn on aintitcool.com and also for 3469178, objects with width/height of 0
	incorrectly excluded from tabbing.
	
        Reviewed by darin

        * khtml/html/html_formimpl.cpp:
        (HTMLGenericFormElementImpl::isSelectable):
        * khtml/html/html_inlineimpl.cpp:
        (HTMLAnchorElementImpl::isSelectable):
        * khtml/rendering/render_flow.cpp:
        (RenderFlow::getAbsoluteRepaintRect):
        * khtml/rendering/render_inline.cpp:
        (RenderInline::addFocusRingRects):
        (RenderInline::paintOutline):
        * khtml/rendering/render_object.cpp:
        (RenderObject::addFocusRingRects):
        (RenderObject::getAbsoluteRepaintRectWithOutline):

2003-10-30  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by Darin.

	- fixed 3426081 - empty cells HTMLCollection for <tr>
	- fixed 3367598 - "length" attribute for table row "cells" always returns 0
	
        * khtml/dom/html_table.cpp:
        (HTMLTableRowElement::cells): TR_CELLS, not TABLE_ROWS.

2003-10-30  David Hyatt  <hyatt@apple.com>

	Fix for 3468916, outline needs its own paint action so that focus rings don't draw under other content.
	
        Reviewed by kocienda

        * khtml/rendering/render_block.cpp:
        (khtml::RenderBlock::paintObject):
        (khtml::RenderBlock::paintFloats):
        * khtml/rendering/render_image.cpp:
        (RenderImage::paintObject):
        * khtml/rendering/render_inline.cpp:
        (RenderInline::paintObject):
        * khtml/rendering/render_layer.cpp:
        (RenderLayer::paintLayer):
        * khtml/rendering/render_object.h:

2003-10-30  Maciej Stachowiak  <mjs@apple.com>

	Fixed Dave's fix to my fix to my fix:

        * khtml/html/html_imageimpl.cpp:
        (HTMLImageElementImpl::width): Put back m_render check, consider
	the case of image with no width/height attributes and display:none
	set. We don't want to crash on that.
        (HTMLImageElementImpl::height): Ditto.

2003-10-30  Ken Kocienda  <kocienda@apple.com>

        Reviewed by Hyatt

	Support for tabbing to links.

	Fixes these bugs

	<rdar://problem/3468395>: fix full keyboard access loop for buttons
	<rdar://problem/3468397>: paint aqua focus rings around text links
	<rdar://problem/3468406>: focused links do not activate by hitting
	   return key
	<rdar://problem/3468410>: paintTextOutline in RenderText objects
	   should be done at a higher level
	<rdar://problem/3468424>: improve function to determine if a node is
	   tab selectable
	<rdar://problem/3468427>: add bridge function to access active
	   document view for a node
	<rdar://problem/3468429>: links do not scroll into view when focusing
	<rdar://problem/3468435>: when tabbing out of a frame, last focused
	   node is not cleared if it is a text link
	<rdar://problem/3468436>: focus on text link does not clear when
	   clicking mouse in document body
	<rdar://problem/3468440>: add setRect convenience to QRect
	<rdar://problem/3468444>: elements paint their outlines even if they
	   are not visible
	<rdar://problem/3468448>: setting focus on a node sets focus on all
	   its siblings
	<rdar://problem/3468456>: cannot tab to form image input elements
	<rdar://problem/3468461>: tab focus can seem to disappear from view on
	   pages with dhtml menus
	<rdar://problem/3469021>: webcore bridge nextKeyView always starts 
	from the beginning of the document

        * WebCore-combined.exp: Export WebCoreGraphicsBridge class
        * WebCore.exp: Ditto
        * WebCore.pbproj/project.pbxproj: Add WebCoreGraphicsBridge class
        * khtml/css/cssparser.cpp: 
        (CSSParser::parseValue): border style check now take apple aqua
	style into account
        * khtml/css/cssvalues.in: Add -apple-aqua border value
        * khtml/css/html4.css: Change focus, a:link:active, and a:visited:active
	to use new -apple-aqua focus rings.
        * khtml/html/html_formimpl.cpp:
        (HTMLGenericFormElementImpl::isSelectable): Improve function so
	that invisible elements are no longer considered selectable
        * khtml/html/html_inlineimpl.cpp:
        (HTMLAnchorElementImpl::isSelectable): Ditto.
        (HTMLAnchorElementImpl::defaultEventHandler): Make return key
	activate links as well as Enter.
        * khtml/html/html_inlineimpl.h: Move isSelectable function into
	implementation file.
        * khtml/rendering/render_block.cpp: 
        (khtml::RenderBlock::paintObject): Do not paint outlines if
	content is invisible.
        * khtml/rendering/render_flow.cpp:
        (RenderFlow::getAbsoluteRepaintRect): Improve function to correctly
	calculate repaint rects including outlines.
        * khtml/rendering/render_image.cpp:
        (RenderImage::paintObject): Do not paint outlines if
        content is invisible.
        * khtml/rendering/render_inline.cpp:
        (RenderInline::paintObject): Ditto.
        (RenderInline::addFocusRingRects): New function to gather up rects
	to use for painting outlines.
        (RenderInline::paintOutline): Added code to paint aqua focus rings.
        * khtml/rendering/render_inline.h:
        * khtml/rendering/render_object.cpp:
        (RenderObject::drawBorder): Add case for apple aqua border style.
        (RenderObject::addFocusRingRects): New function to gather up rects
        to use for painting outlines.
        (RenderObject::paintOutline): Added code to paint aqua focus rings.
        (RenderObject::getAbsoluteRepaintRectWithOutline): Helper function
	to calculate rectangle to use for repainting when an object has an
	outline.
        * khtml/rendering/render_object.h: Add addFocusRingRects declaration.
        * khtml/rendering/render_style.h: Add APPLEAQUA to border enum
        * khtml/rendering/render_text.cpp:
        (RenderText::paintObject): Removed code to draw outlines.
        * khtml/rendering/render_text.h: Ditto.
        * khtml/xml/dom_elementimpl.cpp: Removed redundant isSelectable check.
        * khtml/xml/dom_elementimpl.h: Ditto.
        * khtml/xml/dom_nodeimpl.cpp:
        (NodeImpl::isSelectable): Added.
        (NodeBaseImpl::setFocus): Do not set focus on siblings.
        * khtml/xml/dom_nodeimpl.h: Moved implementation to .cpp file.
        * kwq/KWQButton.mm:
        (-[KWQButton nextKeyView]): Send a blur before going to next
	key view. This prevents focus from being lost altogether.
        (-[KWQButton previousKeyView]): Ditto.
        * kwq/KWQKHTMLPart.h: Added documentViewForNode function.
        * kwq/KWQKHTMLPart.mm:
        (KWQKHTMLPart::nextKeyViewInFrame): Add check for other focusables,
	like text links.
        (KWQKHTMLPart::nextKeyViewInFrameHierarchy): Remove focus when leaving
	a view.
        (KWQKHTMLPart::documentViewForNode): Added.
        (KWQKHTMLPart::khtmlMousePressEvent): Remove focus when you click in
	a non-focusable area, like the document body.
        * kwq/KWQPainter.h: Added declarations.
        * kwq/KWQPainter.mm:
        (QPainterPrivate::QPainterPrivate): Modified constructor for new fields.
        (QPainter::initFocusRing): Added.
        (QPainter::addFocusRingRect): Added.
        (QPainter::drawFocusRing): Added.
        (QPainter::clearFocusRing): Added.
        * kwq/KWQRect.h:
        (QRect::setRect): Added.
        * kwq/WebCoreBridge.h:
        * kwq/WebCoreBridge.mm:
        (-[WebCoreBridge nextKeyView]): Start from the currently-focused node,
	if there is one, not unconditionally from the start of the document.
        (-[WebCoreBridge previousKeyView]): Ditto
        * kwq/WebCoreGraphicsBridge.h: Added.
        * kwq/WebCoreGraphicsBridge.m: Added.
        (+[WebCoreGraphicsBridge sharedBridge]): Added.
        (-[WebCoreGraphicsBridge init]): Added.
        (-[WebCoreGraphicsBridge setFocusRingStyle:radius:color:]): Added.

2003-10-30  Maciej Stachowiak  <mjs@apple.com>

	Fix mistake in my last change that I did not mean to commit.

        * khtml/html/html_imageimpl.cpp:
        (HTMLImageElementImpl::width): Remove extraneous second attempt to
	lay out.

2003-10-30  David Hyatt  <hyatt@apple.com>

	Put paged-media changes back without the wrongful removal of the style data copy constructors (which
	were necessary after all).
	
        * ChangeLog:
        * khtml/css/cssstyleselector.cpp:
        (khtml::CSSStyleSelector::applyRule):
        * khtml/rendering/render_style.cpp:
        (StyleInheritedData::StyleInheritedData):
        (StyleInheritedData::operator==):
        * khtml/rendering/render_style.h:
        (khtml::):
        (khtml::RenderStyle::NonInheritedFlags::operator==):
        (khtml::RenderStyle::setBitDefaults):
        (khtml::RenderStyle::widows):
        (khtml::RenderStyle::orphans):
        (khtml::RenderStyle::pageBreakInside):
        (khtml::RenderStyle::pageBreakBefore):
        (khtml::RenderStyle::pageBreakAfter):
        (khtml::RenderStyle::setWidows):
        (khtml::RenderStyle::setOrphans):
        (khtml::RenderStyle::setPageBreakInside):
        (khtml::RenderStyle::setPageBreakBefore):
        (khtml::RenderStyle::setPageBreakAfter):

2003-10-30  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by Dave.

	- fixed 3468129 - REGRESSION: FOUC occurs on Surfin' Safari
	
        * khtml/ecma/kjs_html.cpp:
        (KJS::HTMLElement::getValueProperty): Don't force layout for image
	width/height if you can determine it statically from the attribute.
        * khtml/html/html_image.cpp:
        (HTMLImageElementImpl::width):
        (HTMLImageElementImpl::height):

=== Safari-112 ===

2003-10-30  Ken Kocienda  <kocienda@apple.com>

        Reviewed by me

	Rolling out this code since it caused a big performance 
	regression.

	2003-10-29  David Hyatt  <hyatt@apple.com>

		Add the paged media properties to RenderStyle.  
		They aren't used yet, but they should now be
		parsed and interpreted correctly.

        * khtml/css/cssstyleselector.cpp:
        (khtml::CSSStyleSelector::applyRule):
        * khtml/rendering/render_style.cpp:
        (StyleSurroundData::StyleSurroundData):
        (StyleBoxData::StyleBoxData):
        (StyleBoxData::operator==):
        (StyleVisualData::~StyleVisualData):
        (StyleVisualData::StyleVisualData):
        (StyleBackgroundData::StyleBackgroundData):
        (StyleFlexibleBoxData::StyleFlexibleBoxData):
        (opacity):
        (textShadow):
        (StyleInheritedData::StyleInheritedData):
        (StyleInheritedData::~StyleInheritedData):
        (StyleInheritedData::operator==):
        * khtml/rendering/render_style.h:
        (khtml::StyleBackgroundData::~StyleBackgroundData):
        (khtml::StyleFlexibleBoxData::~StyleFlexibleBoxData):
        (khtml::RenderStyle::NonInheritedFlags::operator==):
        (khtml::RenderStyle::setBitDefaults):

2003-10-29  David Hyatt  <hyatt@apple.com>

	Fix for 3466628, widgets in overflow blocks don't move when the overflow block is scrolled.  This
	was a regression caused by my change to move widgets only during layout and not at paint time.  The
	problem with this is that scrolling an overflow block doesn't do a layout, just a repaint.  I patched
	the layer code to update widget positions on an overflow block scroll.

	This then exposed a bug in absolutePosition, namely that the scroll offset was never factored in when
	computing absolutePosition.  This bug also explains why text selection and cursor display were wrong
	inside scrolled overflow blocks.
	
        Reviewed by mjs

        * khtml/rendering/render_box.cpp:
        (RenderBox::absolutePosition):
        * khtml/rendering/render_layer.cpp:
        (RenderLayer::scrollToOffset):
        * khtml/rendering/render_object.cpp:
        (RenderObject::absolutePosition):
        * khtml/rendering/render_text.cpp:
        (RenderText::cursorPos):
        (RenderText::posOfChar):
        * khtml/rendering/render_text.h:

2003-10-29  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by Dave.

	- fixed 3467499 - REGRESSION: onClick handlers on links don't work (bubbling broken)
	
        * khtml/xml/dom2_eventsimpl.cpp:
        (EventImpl::EventImpl): Initialize m_cancelBubble (duh).

2003-10-29  David Hyatt  <hyatt@apple.com>

	Fix for 3466802.  When breaking on a newline, "pre" is determined by checking the actual object that
	the line broke on, and not by simply checking the "pre" status of the containing block.
	
        Reviewed by mjs

        * khtml/rendering/bidi.cpp:
        (khtml::RenderBlock::layoutInlineChildren):

2003-10-29  David Hyatt  <hyatt@apple.com>

	Add the paged media properties to RenderStyle.  They aren't used yet, but they should now be 
	parsed and interpreted correctly.
	
        Reviewed by kocienda

        * khtml/css/cssstyleselector.cpp:
        (khtml::CSSStyleSelector::applyRule):
        * khtml/rendering/render_style.cpp:
        (StyleBoxData::operator==):
        (StyleFlexibleBoxData::StyleFlexibleBoxData):
        (:opacity):
        (:textShadow):
        (StyleInheritedData::StyleInheritedData):
        (StyleInheritedData::operator==):
        * khtml/rendering/render_style.h:
        (khtml::):
        (khtml::RenderStyle::NonInheritedFlags::operator==):
        (khtml::RenderStyle::setBitDefaults):
        (khtml::RenderStyle::widows):
        (khtml::RenderStyle::orphans):
        (khtml::RenderStyle::pageBreakInside):
        (khtml::RenderStyle::pageBreakBefore):
        (khtml::RenderStyle::pageBreakAfter):
        (khtml::RenderStyle::setWidows):
        (khtml::RenderStyle::setOrphans):
        (khtml::RenderStyle::setPageBreakInside):
        (khtml::RenderStyle::setPageBreakBefore):
        (khtml::RenderStyle::setPageBreakAfter):

2003-10-29  David Hyatt  <hyatt@apple.com>

        Reviewed by NOBODY (OOPS!).

        * khtml/css/cssstyleselector.cpp:
        (khtml::CSSStyleSelector::applyRule):
        * khtml/rendering/render_style.cpp:
        (StyleBoxData::operator==):
        (StyleFlexibleBoxData::StyleFlexibleBoxData):
        (:opacity):
        (:textShadow):
        (StyleInheritedData::StyleInheritedData):
        (StyleInheritedData::operator==):
        * khtml/rendering/render_style.h:
        (khtml::):
        (khtml::RenderStyle::NonInheritedFlags::operator==):
        (khtml::RenderStyle::setBitDefaults):
        (khtml::RenderStyle::widows):
        (khtml::RenderStyle::orphans):
        (khtml::RenderStyle::pageBreakInside):
        (khtml::RenderStyle::pageBreakBefore):
        (khtml::RenderStyle::pageBreakAfter):
        (khtml::RenderStyle::setWidows):
        (khtml::RenderStyle::setOrphans):
        (khtml::RenderStyle::setPageBreakInside):
        (khtml::RenderStyle::setPageBreakBefore):
        (khtml::RenderStyle::setPageBreakAfter):

2003-10-29  David Hyatt  <hyatt@apple.com>

	Refine the fix to updateLayout.
	updateStyleSelector would get called over and over again when you queried for layout properties from
	JS.  If no stylesheets are pending, this isn't necessary (and is quite expensive, since updateStyleSelector
	is a slow function).
	
        Reviewed by darin

        * khtml/xml/dom_docimpl.cpp:
        (DocumentImpl::updateLayout):

2003-10-29  David Hyatt  <hyatt@apple.com>

	Fix crasher in border collapsing code.
	
        Reviewed by kocienda

        * khtml/rendering/render_table.cpp:
        (RenderTable::cellRight):

2003-10-28  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by Darin.

	- fixed 3163842 - Citibank cardmember central DHTML menus not working right in Safari
	
        * khtml/ecma/kjs_html.cpp:
        (KJS::HTMLElement::getValueProperty): update layout before fetching image properties
	that need it.
        * khtml/xml/dom_docimpl.cpp:
        (DocumentImpl::DocumentImpl): Initialize m_ignorePendingStylesheets to false.
        (DocumentImpl::updateLayout): Ignore pending stylesheets - when JS demands a
	layout, it wants a real one now.
        (DocumentImpl::updateStyleSelector): Go ahead with the update if we're ignoring
	pending stylesheets.
        * khtml/xml/dom_docimpl.h:
        (DOM::DocumentImpl::haveStylesheetsLoaded): Pretend stylesheets have loaded if
	we're temporarily ignoring pending stylesheets.

2003-10-29  David Hyatt  <hyatt@apple.com>

	Implement support for <marquee>.  This includes support for the CSS3 specification (although modified a fair
	bit to actually be compatible with WinIE's version and to correct obvious errors in the draft).  All of the
	marquee behaviors (slide, scroll, and alternate) are supported.

	This patch also fixes the following bugs that were discovered while testing marquee:
	(1) An error in the computation of scrollWidth and scrollHeight.  
	(2) The ability to ask for the leftmostPosition as well as the rightmostPosition of content and to
	be able to ask for the positions of children (via left/right/lowest) without including the parent in the
	computation.
	(3) An optimization to RenderFlow's rightmost/lowestPosition functions to avoid examining text elements since
	they are always fully accounted for by either overflow or by inline flow boxes.
	(4) A fix for RTL rendering.  A block with direction:RTL was being placed on the right, when in reality only
	its children should be placed on the right.
	(5) A fix to prevent inline blocks and tables from computing auto margins (making them just like floats in this
	regard).
	
        Reviewed by darin

        * khtml/css/cssparser.cpp:
        (validUnit):
        (CSSParser::parseValue):
        * khtml/css/cssproperties.c:
        (hash_prop):
        (findProp):
        * khtml/css/cssproperties.h:
        * khtml/css/cssproperties.in:
        * khtml/css/cssstyleselector.cpp:
        (khtml::convertToLength):
        (khtml::CSSStyleSelector::applyRule):
        * khtml/css/cssvalues.c:
        (hash_val):
        (findValue):
        * khtml/css/cssvalues.h:
        * khtml/css/cssvalues.in:
        * khtml/css/html4.css:
        * khtml/html/html_blockimpl.cpp:
        (HTMLMarqueeElementImpl::HTMLMarqueeElementImpl):
        (HTMLMarqueeElementImpl::id):
        (HTMLMarqueeElementImpl::parseAttribute):
        * khtml/html/html_blockimpl.h:
        (DOM::HTMLMarqueeElementImpl::minimumDelay):
        * khtml/html/htmlparser.cpp:
        (KHTMLParser::getElement):
        * khtml/misc/htmlattrs.c:
        (hash_attr):
        (findAttr):
        * khtml/misc/htmlattrs.h:
        * khtml/misc/htmlattrs.in:
        * khtml/rendering/bidi.cpp:
        (khtml::RenderBlock::findNextLineBreak):
        * khtml/rendering/render_block.cpp:
        (khtml::RenderBlock::lowestPosition):
        (khtml::RenderBlock::rightmostPosition):
        (khtml::RenderBlock::leftmostPosition):
        * khtml/rendering/render_block.h:
        * khtml/rendering/render_box.cpp:
        (RenderBox::setStyle):
        (RenderBox::calcWidth):
        (RenderBox::calcHorizontalMargins):
        (RenderBox::lowestPosition):
        (RenderBox::rightmostPosition):
        (RenderBox::leftmostPosition):
        * khtml/rendering/render_box.h:
        * khtml/rendering/render_flow.cpp:
        (RenderFlow::lowestPosition):
        (RenderFlow::rightmostPosition):
        (RenderFlow::leftmostPosition):
        * khtml/rendering/render_flow.h:
        * khtml/rendering/render_layer.cpp:
        (RenderLayer::RenderLayer):
        (RenderLayer::~RenderLayer):
        (RenderLayer::updateLayerPositions):
        (RenderLayer::scrollToOffset):
        (RenderLayer::computeScrollDimensions):
        (RenderLayer::styleChanged):
        (RenderLayer::stopMarquees):
        (m_whiteSpace):
        (Marquee::marqueeSpeed):
        (Marquee::direction):
        (Marquee::isHorizontal):
        (Marquee::computePosition):
        (Marquee::start):
        (Marquee::stop):
        (Marquee::updateMarqueePosition):
        (Marquee::updateMarqueeStyle):
        (Marquee::timerEvent):
        * khtml/rendering/render_layer.h:
        (khtml::):
        (khtml::RenderLayer::marquee):
        * khtml/rendering/render_object.cpp:
        (RenderObject::isHTMLMarquee):
        (RenderObject::sizesToMaxWidth):
        * khtml/rendering/render_object.h:
        (khtml::RenderObject::lowestPosition):
        (khtml::RenderObject::rightmostPosition):
        (khtml::RenderObject::leftmostPosition):
        * khtml/rendering/render_style.cpp:
        (StyleMarqueeData::StyleMarqueeData):
        (StyleMarqueeData::operator==):
        (opacity):
        (marquee):
        (StyleCSS3NonInheritedData::operator==):
        (RenderStyle::RenderStyle):
        * khtml/rendering/render_style.h:
        (khtml::):
        (khtml::StyleMarqueeData::operator!=):
        (khtml::RenderStyle::marqueeIncrement):
        (khtml::RenderStyle::marqueeSpeed):
        (khtml::RenderStyle::marqueeLoopCount):
        (khtml::RenderStyle::marqueeBehavior):
        (khtml::RenderStyle::marqueeDirection):
        (khtml::RenderStyle::setMarqueeIncrement):
        (khtml::RenderStyle::setMarqueeSpeed):
        (khtml::RenderStyle::setMarqueeDirection):
        (khtml::RenderStyle::setMarqueeBehavior):
        (khtml::RenderStyle::setMarqueeLoopCount):
        * khtml/xml/dom_docimpl.cpp:
        (DocumentImpl::createHTMLElement):
        * kwq/KWQKHTMLPart.mm:
        (KWQKHTMLPart::clearTimers):

2003-10-29  David Hyatt  <hyatt@apple.com>

	Make <button> be an inline-block.
	
        * khtml/css/html4.css:

2003-10-28  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by Darin.

	 - fixed 3465547 - REGRESSION (100-111)?: window.prompt does not work
	
        * kwq/KWQKHTMLPart.mm:
        (KWQKHTMLPart::runJavaScriptPrompt): Return the result properly
	instead of always returning false.

2003-10-28  Darin Adler  <darin@apple.com>

        Reviewed by Maciej.

        - fixed 3465504 -- REGRESSION (100-111): text areas with Chinese text in them are wider than ones without

        * kwq/KWQTextArea.h: Add _font field.
        * kwq/KWQTextArea.mm:
        (-[KWQTextArea dealloc]): Release _font.
        (-[KWQTextArea setFont:]): Store font in _font as well as setting it in the text view.
        (-[KWQTextArea sizeWithColumns:rows:]): Use _font rather than asking the text view for the font.

2003-10-28  Darin Adler  <darin@apple.com>

        Reviewed by Maciej.

        - fixed 3464702 -- node.item(x) is not implemented (dynamic menus not filled out at techcu.com)

        * khtml/ecma/kjs_dom.cpp: (DOMNodeProtoFunc::tryCall): Add implementation of item function.
        * khtml/ecma/kjs_dom.h: Added Item to the enum.
        * khtml/ecma/kjs_dom.lut.h: Regenerated.

2003-10-28  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by Dave,

	- fixed 3379725 - for <a> elements with both onclick and href, Web Kit's behavior does not match other browsers

	The fix for this was to make cancelBubble only prevent bubbling,
	but not stop propagation or prevent default. While I was at it, I
	made returnValue work right too.
	
        * khtml/ecma/kjs_events.cpp:
        (DOMEvent::getValueProperty): Implement cancelBubble and returnValue properties properly.
        (DOMEvent::putValue): Ditto.
        * khtml/dom/dom2_events.cpp:
        (Event::setCancelBubble): Call impl.
        (Event::setDefaultPrevented): Ditto.
        (Event::getCancelBubble): Ditto.
        (Event::defaultPrevented): Ditto.
        * khtml/dom/dom2_events.h:
        * khtml/xml/dom2_eventsimpl.h:
        (DOM::EventImpl::propagationStopped): Made this a const method.
        (DOM::EventImpl::defaultPrevented): Ditto.
        (DOM::EventImpl::setCancelBubble): Implemented by setting a new field.
        (DOM::EventImpl::getCancelBubble): Corresponding getter.
        (DOM::EventImpl::setDefaultPrevented): Set the already existing field for this.
        * khtml/xml/dom_nodeimpl.cpp:
        (NodeImpl::dispatchGenericEvent): Check getCancelBubble() when bubbling. Do not
	check bubbles() before default handling.

2003-10-28  Chris Blumenberg  <cblu@apple.com>

	Fixed: <rdar://problem/3464472>: REGRESSION: New CSS cursor support breaks style="cursor:default

        Reviewed by dave.

        * kwq/KWQWidget.mm:
        (QWidget::cursor): break after we hit a view that responds to documentCursor as we do in setCursor. Without breaking we were returning the cursor of the most super HTML view which is not what we want.

2003-10-28  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by John.

	- fixed 3421393 - window.open does not handle non-integral height/width (small window at saabusa.com)
	
        * khtml/ecma/kjs_window.cpp:
        (WindowFunc::tryCall): Parse width, height, top and left as
	floating point and then cast to int instead of parsing as int to
	match other browsers and avoid rejecting floating point numbers.

2003-10-28  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by John.

	- fixed 3464528 - addEventListener does not work for buttons, text areas, or inputs

        * khtml/rendering/render_form.cpp:
        (RenderFormElement::slotClicked): Send CLICK_EVENT as well as one
	of KHTML_CLICK_EVENT or KHTML_DOUBLE_CLICK_EVENT.

2003-10-28  Maciej Stachowiak  <mjs@apple.com>

        Fixed broken build.

        * kwq/KWQKPartsPart.mm:
        (KParts::ReadOnlyPart::setName): It's a ReadOnlyPart method, not a Part method.

2003-10-28  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by John.

	- fixed 3427046 - href and src attributes don't always give resolved URL

	It turns out that all href and src attributes should be resolved
	against the base, except for frame elements.
	
        * khtml/dom/html_base.cpp:
        (HTMLIFrameElement::src): Resolve against base URL.
        * khtml/dom/html_form.cpp:
        (HTMLInputElement::src): Resolve URL even when empty. Remove
	comment questioning resolution against base - it's definitely
	right.
        * khtml/dom/html_head.cpp:
        (HTMLBaseElement::href): Resolve against base URL.
        (HTMLLinkElement::href): Ditto.
        (HTMLScriptElement::src): Ditto.
        * khtml/dom/html_image.cpp:
        (HTMLAreaElement::href): Ditto.
	(HTMLImageElement::src): Resolve URL even when empty. Remove
	comment questioning resolution against base - it's definitely
	right.
        * khtml/dom/html_inline.cpp:
        (HTMLAnchorElement::href): Resolve against base URL.

2003-10-27  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by Darin.

	- fixed 3083264 - frame names changed by JavaScript are not reflected in WebFrame at the WebKit level
	
        * kwq/KWQKHTMLPart.h:
        * kwq/KWQKHTMLPart.mm:
        (KWQKHTMLPart::setName): Make sure the name is unique. Then tell
	the bridge and the superclass about it.
        * kwq/KWQKPartsPart.h:
        (KParts::ReadOnlyPart::setName): Made this method virtual.
        * kwq/KWQKPartsPart.m: Added. Moved implementations of virtual methods here.
        * kwq/WebCoreBridge.h:
        * kwq/WebCoreBridge.mm:
        (-[WebCoreBridge setName:]): Call the superclass method to avid
	sending the name pointlessly back across the bridge.

2003-10-28  Darin Adler  <darin@apple.com>

        Reviewed by John.

        - fixed 3465063 -- REGRESSION (107-108): hang when fetching a page with an ad in a subframe (theage.com.au)

        * kwq/KWQKHTMLPart.mm: (KWQKHTMLPart::openURL): Follow the parent chain properly rather
        than repeatedly getting the part's own parent!

2003-10-27  Maciej Stachowiak  <mjs@apple.com>

        Reviewed by Darin.

	Improved exception blocking in the following ways:

	- use C++ constructors and destructors so returning or breaking out of an exception block works
	- Remove use of volatile
	- Collapse the caught exception case into a single function call to reduce code size.

        * WebCore.pbproj/project.pbxproj:
        * kwq/KWQButton.mm:
        * kwq/KWQCheckBox.mm:
        * kwq/KWQComboBox.mm:
        * kwq/KWQExceptions.h:
        * kwq/KWQExceptions.mm: Added.
        * kwq/KWQFileButton.mm:
        * kwq/KWQFont.mm:
        * kwq/KWQFrame.mm:
        * kwq/KWQKConfigBase.mm:
        * kwq/KWQKCookieJar.mm:
        * kwq/KWQKCursor.mm:
        * kwq/KWQKHTMLPart.mm:
        * kwq/KWQKHTMLPartBrowserExtension.mm:
        * kwq/KWQKHistoryProvider.mm:
        * kwq/KWQKJavaAppletWidget.mm:
        * kwq/KWQKJobClasses.mm:
        * kwq/KWQKLocale.mm:
        * kwq/KWQKPartsBrowserInterface.mm:
        * kwq/KWQLineEdit.mm:
        * kwq/KWQListBox.mm:
        * kwq/KWQLoader.mm:
        * kwq/KWQPainter.mm:
        * kwq/KWQPushButton.mm:
        * kwq/KWQRadioButton.mm:
        * kwq/KWQScrollBar.mm:
        * kwq/KWQScrollView.mm:
        * kwq/KWQTextEdit.mm:
        * kwq/KWQWidget.mm:
        
2003-10-26  Darin Adler  <darin@apple.com>

        * khtml/khtml_part.cpp: (findWordBoundary): Fix small mistake from NULL check-in earlier.

2003-10-26  Darin Adler  <darin@apple.com>

        * kwq/KWQLoader.mm: (KWQResponseMIMEType): Removed an excess volatile.

2003-10-26  Darin Adler  <darin@apple.com>

        Reviewed by Maciej.

        - fixed 3463624 -- page at cinemakorea.com shows up blank due to kTECBufferBelowMinimumSizeErr from TEC

        * kwq/KWQTextCodec.mm: (KWQTextDecoder::convertOneChunkUsingTEC): To work around the bug
        I found in the decoder (Radar 3351093), change kTECBufferBelowMinimumSizeErr to
        kTECOutputBufferFullStatus in cases where bytes were actually converted.

2003-10-26  Darin Adler  <darin@apple.com>

        Reviewed by Maciej.

        - fixed 3463586 -- WebCore does not compile with new definition of NULL

        * khtml/khtml_part.cpp: (findWordBoundary): Changed NULL to 0 and did a little code
        cleanup of the surrounding code.
        * khtml/rendering/break_lines.cpp: (khtml::isBreakable): Changed NULL to 0 and did
        a tiny bit of cleanup.

        * WebCorePrefix.h: Add a definition of NULL here that takes advantage of the GNU
        __null feature even if the system C library doesn't.

2003-10-26  Darin Adler  <darin@apple.com>

        Reviewed by Maciej.

        - fixed 3457831 -- REGRESSION: copying particular text and pasting (plain) produces lots of extra text

        * khtml/khtml_part.cpp: (KHTMLPart::text): Check for the end node when following a
        link to the parent node, not just when following a link to the next child node.
        * kwq/KWQKHTMLPart.mm: (KWQKHTMLPart::attributedString): Ditto.

== Rolled over to ChangeLog-2003-10-25 ==
