2008-08-13  Nikolas Zimmermann  <zimmermann@kde.org>

        Build fix for Qt, not reviewed.
        Don't declare eventuallyMarkAsParserCreated in a block wrapped by !USE_QXMLSTREAM.

        * dom/XMLTokenizer.cpp:
        (WebCore::eventuallyMarkAsParserCreated): Was erre

2008-08-13  Nikolas Zimmermann  <zimmermann@kde.org>

        Build fix, not reviewed.
        Add ScriptElement.cpp to Gtk build.

        * GNUmakefile.am:

2008-08-13  Nikolas Zimmermann  <zimmermann@kde.org>

        Reviewed by Eric.

        Fixes: https://bugs.webkit.org/show_bug.cgi?id=20372

        Refactor HTMLScriptElement's code into a common base class: ScriptElement.
        SVGScriptElement will be converted to use ScriptElement in a follow-up patch.

        This resolves code duplications and allows us to completly replace the old
        SVGScriptElement (which doesn't use CachedScript, no dynamic injected scripts etc..)

        As ScriptElement, doesn't actually inherit from Element, we may want to rename
        it, though StyleElement uses the same naming convention, so I left it as is for now.
        Eventually we'll rename both files in future.

        No functional changes yet, as SVGScriptElement doesn't yet use the new base class.

        * WebCore.pro: Add new ScriptElement.cpp to build.
        * WebCore.vcproj/WebCore.vcproj: Ditto.
        * WebCore.xcodeproj/project.pbxproj: Ditto.
        * WebCoreSources.bkl: Dutto.
        * dom/ScriptElement.cpp: Added. 1:1 based on HTMLScriptElement
        (WebCore::ScriptElement::insertedIntoDocument):
        (WebCore::ScriptElement::removedFromDocument):
        (WebCore::ScriptElement::childrenChanged):
        (WebCore::ScriptElement::finishParsingChildren):
        (WebCore::ScriptElement::handleSourceAttribute):
        (WebCore::isSupportedJavaScriptLanguage):
        (WebCore::ScriptElementData::ScriptElementData):
        (WebCore::ScriptElementData::~ScriptElementData):
        (WebCore::ScriptElementData::requestScript):
        (WebCore::ScriptElementData::evaluateScript):
        (WebCore::ScriptElementData::stopLoadRequest):
        (WebCore::ScriptElementData::notifyFinished):
        (WebCore::ScriptElementData::ignoresLoadRequest):
        (WebCore::ScriptElementData::shouldExecuteAsJavaScript):
        (WebCore::ScriptElementData::scriptCharset):
        (WebCore::ScriptElementData::scriptContent):
        * dom/ScriptElement.h: Added.
        (WebCore::ScriptElement::ScriptElement):
        (WebCore::ScriptElement::~ScriptElement):
        (WebCore::ScriptElementData::element):
        (WebCore::ScriptElementData::createdByParser):
        (WebCore::ScriptElementData::setCreatedByParser):
        * dom/XMLTokenizer.cpp:
        (WebCore::isScriptElement):
        (WebCore::castToScriptElement):
        (WebCore::eventuallyMarkAsParserCreated):
        (WebCore::XMLTokenizer::startElementNs):
        (WebCore::XMLTokenizer::endElementNs):
        (WebCore::createXHTMLParserErrorHeader):
        (WebCore::XMLTokenizer::insertErrorMessageBlock):
        * html/HTMLScriptElement.cpp: Refactored code, pushed most code down to ScriptElement.
        (WebCore::HTMLScriptElement::HTMLScriptElement):
        (WebCore::HTMLScriptElement::~HTMLScriptElement):
        (WebCore::HTMLScriptElement::isURLAttribute):
        (WebCore::HTMLScriptElement::setCreatedByParser):
        (WebCore::HTMLScriptElement::shouldExecuteAsJavaScript):
        (WebCore::HTMLScriptElement::childrenChanged):
        (WebCore::HTMLScriptElement::parseMappedAttribute):
        (WebCore::HTMLScriptElement::finishParsingChildren):
        (WebCore::HTMLScriptElement::insertedIntoDocument):
        (WebCore::HTMLScriptElement::removedFromDocument):
        (WebCore::HTMLScriptElement::text):
        (WebCore::HTMLScriptElement::setText):
        (WebCore::HTMLScriptElement::setHtmlFor):
        (WebCore::HTMLScriptElement::setEvent):
        (WebCore::HTMLScriptElement::charset):
        (WebCore::HTMLScriptElement::src):
        (WebCore::HTMLScriptElement::type):
        (WebCore::HTMLScriptElement::scriptCharset):
        (WebCore::HTMLScriptElement::scriptContent):
        (WebCore::HTMLScriptElement::sourceAttributeValue):
        (WebCore::HTMLScriptElement::charsetAttributeValue):
        (WebCore::HTMLScriptElement::typeAttributeValue):
        (WebCore::HTMLScriptElement::languageAttributeValue):
        (WebCore::HTMLScriptElement::dispatchLoadEvent):
        (WebCore::HTMLScriptElement::dispatchErrorEvent):
        * html/HTMLScriptElement.h:
        * svg/SVGScriptElement.cpp: Inherit from ScriptElement, don't actually use it yet.
        * svg/SVGScriptElement.cpp:
        (WebCore::SVGScriptElement::SVGScriptElement):
        (WebCore::SVGScriptElement::scriptContent):
        (WebCore::SVGScriptElement::sourceAttributeValue):
        (WebCore::SVGScriptElement::charsetAttributeValue):
        (WebCore::SVGScriptElement::typeAttributeValue):
        (WebCore::SVGScriptElement::languageAttributeValue):
        (WebCore::SVGScriptElement::dispatchLoadEvent):
        (WebCore::SVGScriptElement::dispatchErrorEvent):
        * svg/SVGScriptElement.h:
        (WebCore::SVGScriptElement::setCreatedByParser):

2008-08-13  Eric Seidel  <eric@webkit.org>

        Attempt to fix the Gtk build, no review.

        I removed the bogus GraphicsContext::translatePoint() hack for Gtk in the process.

        * platform/graphics/GraphicsContext.h:
        * platform/graphics/cairo/GraphicsContextCairo.cpp:
        * platform/graphics/qt/GradientQt.cpp:
        * platform/graphics/qt/GraphicsContextQt.cpp:
        * platform/gtk/RenderThemeGtk.cpp:
        (WebCore::paintMozWidget):

2008-08-13  Eric Seidel  <eric@webkit.org>

        Yet another attempt to fix the Qt build, no review.

        * platform/graphics/qt/GradientQt.cpp:
        * platform/graphics/qt/GraphicsContextQt.cpp:
        (WebCore::GraphicsContext::applyStrokePattern):
        (WebCore::GraphicsContext::applyFillPattern):

2008-08-13  Eric Seidel  <eric@webkit.org>

        Attempt to fix the Windows build, no review.

        * platform/win/CursorWin.cpp:
        (WebCore::loadCursorByName):
        * platform/win/ScrollViewWin.cpp:
        (WebCore::ScrollView::paint):

2008-08-13  Eric Seidel  <eric@webkit.org>

        Attempt to fix the Windows build, no review.

        * platform/win/CursorWin.cpp:
        (WebCore::loadCursorByName):
        * platform/win/ScrollViewWin.cpp:
        (WebCore::ScrollView::paint):

2008-08-13  Eric Seidel  <eric@webkit.org>

        Attempt to fix the Qt build, no review.

        * platform/graphics/qt/ImageBufferQt.cpp:
        (WebCore::ImageBuffer::image):

2008-08-13  Eric Seidel  <eric@webkit.org>

        Attempt to fix the Windows build, no review.

        * platform/graphics/win/ImageWin.cpp:
        (WebCore::Image::loadPlatformResource):
        * plugins/win/PluginViewWin.cpp:
        (WebCore::PluginView::paintMissingPluginIcon):

2008-08-13  Eric Seidel  <eric@webkit.org>

        Another attempt to fix the Qt build, no review.

        * platform/graphics/qt/ImageQt.cpp:
        * platform/graphics/qt/StillImageQt.h:

2008-08-13  Eric Seidel  <eric@webkit.org>

        No review, build fix only.

        Fix mac build, due to change in new code since my patch was written.

        * svg/graphics/cg/SVGResourceMaskerCg.mm:
        (WebCore::SVGResourceMasker::applyMask):

2008-08-13  Eric Seidel  <eric@webkit.org>

        Build fix only, no review.

        Attempt to fix the Qt build.

        * platform/graphics/qt/ImageBufferQt.cpp:
        * platform/graphics/qt/StillImageQt.h:
        (WebCore::StillImage::create):
        (WebCore::StillImage::destroyDecodedData):
        (WebCore::StillImage::decodedSize):

2008-08-13  Eric Seidel  <eric@webkit.org>

        Build fix only, no review.

        Attempt to fix the Qt build.

        * html/CanvasStyle.cpp:
        (WebCore::CanvasStyle::applyStrokeColor):
        (WebCore::CanvasStyle::applyFillColor):

2008-08-13  Eric Seidel  <eric@webkit.org>

        Reviewed by Sam.

        Match HTML5 spec by throwing INVALID_STATE_ERR when
        createPattern is called and the HTMLImageElement is not
        yet done loading the image (!isComplete)
        https://bugs.webkit.org/show_bug.cgi?id=20351

        Test: http/misc/canvas-pattern-from-incremental-image.html

        * html/CanvasRenderingContext2D.cpp:
        (WebCore::CanvasRenderingContext2D::createPattern):

2008-08-13  Eric Seidel  <eric@webkit.org>

        Reviewed by Niko.

        Split out a Pattern class from CanvasPattern
        and remove all the Pattern-related #ifdefs
        (This will break non-mac platforms!  I will fix them.)
        https://bugs.webkit.org/show_bug.cgi?id=20351

        * GNUmakefile.am:
        * WebCore.pro:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * WebCoreSources.bkl:
        * html/CanvasPattern.cpp:
        (WebCore::CanvasPattern::parseRepetitionType):
        (WebCore::CanvasPattern::CanvasPattern):
        * html/CanvasPattern.h:
        (WebCore::CanvasPattern::create):
        (WebCore::CanvasPattern::pattern):
        (WebCore::CanvasPattern::originClean):
        * html/CanvasRenderingContext2D.cpp:
        (WebCore::CanvasRenderingContext2D::createPattern):
        (WebCore::CanvasRenderingContext2D::applyStrokePattern):
        (WebCore::CanvasRenderingContext2D::applyFillPattern):
        * html/CanvasRenderingContext2D.h:
        * html/HTMLCanvasElement.cpp:
        * html/HTMLCanvasElement.h:
        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::createHistoryItem):
        * platform/graphics/GraphicsContext.h:
        * platform/graphics/cairo/GraphicsContextCairo.cpp:
        (WebCore::GraphicsContext::applyStrokePattern):
        (WebCore::GraphicsContext::applyFillPattern):
        * platform/graphics/cg/GraphicsContextCG.cpp:
        (WebCore::GraphicsContext::clipToImageBuffer):
        (WebCore::GraphicsContext::applyStrokePattern):
        (WebCore::GraphicsContext::applyFillPattern):

2008-08-13  Eric Seidel  <eric@webkit.org>

        Reviewed by Niko.

        Make Images RefCounted (and clean up callers)
        https://bugs.webkit.org/show_bug.cgi?id=20351

        * editing/DeleteButtonController.cpp:
        (WebCore::DeleteButtonController::createDeletionUI):
        * loader/CachedImage.cpp:
        (WebCore::CachedImage::CachedImage):
        (WebCore::brokenImage):
        (WebCore::nullImage):
        (WebCore::CachedImage::image):
        (WebCore::CachedImage::notifyObservers):
        (WebCore::CachedImage::createImage):
        * loader/CachedImage.h:
        * loader/icon/IconRecord.cpp:
        (WebCore::IconRecord::setImageData):
        (WebCore::IconRecord::loadImageFromResource):
        * loader/icon/IconRecord.h:
        * platform/graphics/BitmapImage.h:
        (WebCore::BitmapImage::create):
        * platform/graphics/GeneratedImage.h:
        * platform/graphics/Gradient.cpp:
        * platform/graphics/Gradient.h:
        * platform/graphics/Image.cpp:
        (WebCore::Image::nullImage):
        * platform/graphics/Image.h:
        * platform/graphics/ImageBuffer.h:
        * platform/graphics/cairo/ImageBufferCairo.cpp:
        (WebCore::ImageBuffer::image):
        * platform/graphics/cg/ImageBufferCG.cpp:
        (WebCore::ImageBuffer::image):
        (WebCore::ImageBuffer::getImageData):
        (WebCore::ImageBuffer::putImageData):
        * platform/graphics/cg/PDFDocumentImage.h:
        (WebCore::PDFDocumentImage::create):
        (WebCore::PDFDocumentImage::destroyDecodedData):
        (WebCore::PDFDocumentImage::decodedSize):
        * platform/graphics/gtk/ImageGtk.cpp:
        (WebCore::Image::loadPlatformResource):
        * platform/graphics/mac/ImageMac.mm:
        (WebCore::Image::loadPlatformResource):
        * rendering/RenderImage.cpp:
        * rendering/RenderLayer.cpp:
        (WebCore::RenderLayer::paintOverflowControls):
        * svg/graphics/SVGImage.cpp:
        (WebCore::SVGImage::nativeImageForCurrentFrame):
        * svg/graphics/SVGImage.h:
        (WebCore::SVGImage::create):
        (WebCore::SVGImage::destroyDecodedData):
        (WebCore::SVGImage::decodedSize):
        (WebCore::SVGImage::frameAtIndex):
        * svg/graphics/cairo/SVGPaintServerPatternCairo.cpp:
        (WebCore::SVGPaintServerPattern::setup):
        * svg/graphics/cairo/SVGResourceMaskerCairo.cpp:
        (WebCore::SVGResourceMasker::applyMask):
        * svg/graphics/cg/SVGPaintServerPatternCg.cpp:
        (WebCore::patternCallback):
        * svg/graphics/cg/SVGResourceMaskerCg.mm:
        (WebCore::SVGResourceMasker::applyMask):

2008-08-13  Eric Seidel  <eric@webkit.org>

        Reviewed by Niko.

        Remove #ifdefs from CanvasStyle by using platform/Color.h
        https://bugs.webkit.org/show_bug.cgi?id=20351

        There are some down-sides to this commit.
        This commit limits us to 255 levels of grey for calls like:
        context.setStrokeStyle(.37, 1.0)
        previously CG might have used up to 32bits to store the grey level
        Since setStrokeStyle is not part of HTML5, I don't suspect the web will notice.

        Likewise, setStrokeStyle/setFillStyle calls which used float colors are now limited
        to RGBA32 (like all the rest of colors in WebCore), thus:
        context.setStrokStyle(.37, .24, .456, .99) will now have the same precision as:
        context.strokeStyle = "rgba(.37, .24, .456, .99)", which is to say RGBA32

        If this is a problem for Dashboard, we can either roll out this commit
        or add a beefier Color abstraction, which can be used internally by GraphicsContext
        when keeping state, and then GraphicsContext can grow some additional set* routines
        for setting the a grey/float/whatever fill and stroke.

        * html/CanvasRenderingContext2D.cpp:
        (WebCore::CanvasRenderingContext2D::setFillStyle):
        * html/CanvasStyle.cpp:
        (WebCore::CanvasStyle::CanvasStyle):
        (WebCore::colorWithOverrideAlpha):
        (WebCore::CanvasStyle::applyStrokeColor):
        (WebCore::CanvasStyle::applyFillColor):
        * html/CanvasStyle.h:
        * platform/graphics/Color.cpp:
        (WebCore::colorFloatToRGBAByte):
        (WebCore::makeRGBA32FromFloats):
        * platform/graphics/Color.h:

2008-08-13  Eric Carlson  <eric.carlson@apple.com>

        Reviewed by Adele Peterson.

        Fix for <rdar://problem/6137931>
        https://bugs.webkit.org/show_bug.cgi?id=20360
        Remove all parameters from the MIME type before checking with the MIME type registry

        Tests: media/video-source-type-params.html

        * html/HTMLMediaElement.cpp:
        (WebCore::HTMLMediaElement::pickMedia): only pass the portion before the first ';' 
        to isSupportedMediaMIMEType()

2008-08-13  Beth Dakin  <bdakin@apple.com>

        Reviewed by Sam Weinig.

        Fix for <rdar://problem/6141345>

        This patch refines findString and markAllMatchesForText functions' 
        interactions with disconnected frames. They no longer rely on 
        knowing where a range is relative to the visible region and work 
        with disconnected frames that contain frames.

        * editing/Editor.cpp:
        (WebCore::Editor::insideVisibleArea): Now returns a bool instead of 
        the visiblity enum.
        (WebCore::Editor::firstVisibleRange): This now returns the very 
        first visible range in the document. It's no longer dependent on 
        searching forward.
        (WebCore::Editor::lastVisibleRange): This now returns the very last 
        visible range in the document. It's no longer dependent on 
        searching backwards.
        (WebCore::Editor::nextVisibleRange): This returns the next visible 
        range in the appropriate direction from the current range.
        * editing/Editor.h:
        * page/Frame.cpp:
        (WebCore::Frame::findString):
        (WebCore::Frame::markAllMatchesForText):

2008-08-13  Kevin Ollivier  <kevino@theolliviers.com>

        wx build fix for case-sensitive platforms, like Linux.

        * WebCoreSources.bkl:

2008-08-13  Marco Barisione  <marco.barisione@collabora.co.uk>

        Reviewed by Holger Freyther.

        http://bugs.webkit.org/show_bug.cgi?id=16881
        [GTK] PlatformScreenGtk is unimplemented

        Original patch by Christian Dywan.

        * platform/gtk/PlatformScreenGtk.cpp:
        (WebCore::screenDepth):
        (WebCore::screenDepthPerComponent):
        (WebCore::screenIsMonochrome):
        (WebCore::screenRect):
        (WebCore::screenAvailableRect):

2008-08-13  Jan Michael Alonzo  <jmalonzo@webkit.org>

        Reviewed by Holger Freyther.

        http://bugs.webkit.org/show_bug.cgi?id=20318
        SharedTimerGtk should use G_PRIORITY_DEFAULT_IDLE for g_idle_add

        g_idle_add is the same as g_idle_add_full with a priority of
        G_PRIORITY_DEFAULT_IDLE, so we can safely use that.

        * platform/gtk/SharedTimerGtk.cpp:
        (WebCore::setSharedTimerFireTime):

2008-08-13  Timothy Hatcher  <timothy@apple.com>

        Changed the InspectorController so it can be notified when the
        attached state of the Inspector changes in WebKit.

        Reviewed by Kevin McCullough.

        * WebCore.base.exp: Updated the symbol for setWindowVisible.
        * page/InspectorController.cpp:
        (WebCore::InspectorController::setWindowVisible): Added an attached argument,
        that defaults to false.Call setAttachedWindow with the attached argument.
        (WebCore::InspectorController::setAttachedWindow): Call the script version
        of setAttachedWindow.
        * page/InspectorController.h:
        * page/inspector/inspector.js:
        (WebInspector.setAttachedWindow): Set the attached property.

2008-08-12  Timothy Hatcher  <timothy@apple.com>

        Added a close button to the Inspector's toolbar when docked.

        https://bugs.webkit.org/show_bug.cgi?id=14270

        Reviewed by Kevin McCullough.

        * page/InspectorController.cpp:
        (WebCore::closeWindow): Call InspectorController::closeWindow.
        (WebCore::InspectorController::windowScriptObjectAvailable):
        Added closeWindow to the script class.
        * page/InspectorController.h:
        * page/inspector/Images/closeButtons.png: Added.
        * page/inspector/inspector.css: Added and changed styles.
        * page/inspector/inspector.html: Added the close button.
        * page/inspector/inspector.js:
        (WebInspector.loaded): Added click event listener to the close button.
        (WebInspector.close): Call InspectorController.closeWindow.

2008-08-12  Timothy Hatcher  <timothy@apple.com>

        Make the docked Web Inspector resizable. This is the cross platform
        portion of the code. Each InspectorClient needs to implement the
        real resize code.

        https://bugs.webkit.org/show_bug.cgi?id=14282

        Reviewed by Kevin McCullough.

        * loader/EmptyClients.h: Added an empty setAttachedWindowHeight.
        * page/InspectorClient.h: Added setAttachedWindowHeight.
        * page/InspectorController.cpp:
        (WebCore::setAttachedWindowHeight): Call setAttachedWindowHeight
        on the InspectorController.
        (WebCore::InspectorController::setAttachedWindowHeight): Call
        setAttachedWindowHeight on the client.
        (WebCore::InspectorController::windowScriptObjectAvailable):
        Added setAttachedWindowHeight to the script class.
        * page/InspectorController.h:
        * page/inspector/inspector.css: Make the cursor on the toolbar be
        row-resize when docked.
        * page/inspector/inspector.js:
        (WebInspector.loaded): Always add the toolbarDragStart event listener.
        (WebInspector.toolbarDragStart): Return early if we are not attached
        and not on Leopard. Call WebInspector.elementDragStart.
        (WebInspector.toolbarDragEnd): Call WebInspector.elementDragEnd.
        (WebInspector.toolbarDrag): When attached call setAttachedWindowHeight,
        otherwise call moveByUnrestricted.

2008-08-13  Simon Hausmann  <hausmann@webkit.org>

        Reviewed by Holger.

        Initialize m_zoomsTextOnly in the Settings constructor.

        * page/Settings.cpp:
        (WebCore::Settings::Settings):

2008-08-13  Brad Hughes <bhughes@trolltech.com>

        Reviewed by Simon.

        Fix compiling of QtWebKit in release mode with the Intel C++ Compiler for Linux

        The latest upgrade of the intel compiler allows us to compile all of
        Qt with optimizations enabled (yay!).

        * WebCore.pro:

2008-08-13  Prasanth Ullattil  <prasanth.ullattil@trolltech.com>

        Reviewed by Simon.

        Fix QtWebKit not displaying content on 403 HTTP responses

        Just like with 404 responses also display content with 403, as
        used by http://audiio.ejamming.proteus-tech.com/audiio/profile/original_signup/

        * platform/network/qt/QNetworkReplyHandler.cpp:
        (WebCore::QNetworkReplyHandler::finish):

2008-08-13  Simon Hausmann  <hausmann@webkit.org>

        Reviewed by Holger.

        Qt part of https://bugs.webkit.org/show_bug.cgi?id=18994

        Make the formatting of String::format() locale independent through the use of QString::vsprintf.

        * platform/text/String.cpp:
        (WebCore::String::format):

2008-08-13  Simon Hausmann  <hausmann@webkit.org>

        Reviewed by Lars.

        Fix QWebFrame::setHtml() not setting the new contents immediately.

        Added a setter to the DocumentLoader to toggle the deferred loading of the main
        resource when it comes from substitute data.

        Disable deferred loading of the main resource when we have valid substitute data,
        as used by QWebFrame::setHtml.

        * loader/DocumentLoader.h:

2008-08-13  Mark Rowe  <mrowe@apple.com>

        Speculative GTK build fix.

        * GNUmakefile.am:  Add dependency info for JSSVGElementWrapperFactory.cpp.

2008-08-13  Thiago Macieira  <tjmaciei@trolltech.com>

        Reviewed by Simon.

        Fix encoding of [ and ] in the host part of the URL

        Until QUrl is fixed (making QUrl's tolerant parser more tolerant), we have to
        add this workaround to the QUrl <> WebCore::KURL conversion operator so that it
        doesn't encode [ and ] when they are found in the host part. That is, the
        following URL:
        http://[::1]/
        is valid and should not be reencoded to:
        http://%5b::1%5d/

        * platform/qt/KURLQt.cpp:
        (WebCore::KURL::operator QUrl):

2008-08-12  Mihnea Ovidenie  <mihnea@adobe.com>

        Fix for https://bugs.webkit.org/show_bug.cgi?id=19891
        Broken HTML object elements cause de-reference of pointer to freed memory.
        If we fail to load an image for an object tag and we no longer believe the object tag points at
        an image, then clear m_imageLoader in the HTMLObjectElement so that we attempt to render the
        fall back content.

        Reviewed by Dave Hyatt and Alexey Proskuryakov.

        Test: http/tests/misc/object-image-error-with-onload.html

        * html/HTMLObjectElement.cpp:
        (WebCore::HTMLObjectElement::renderFallbackContent):
        * page/Frame.cpp:
        (WebCore::Frame::Frame):

2008-08-12  Nikolas Zimmermann  <zimmermann@kde.org>

        Reviewed by Dave.
    
        Fixes: https://bugs.webkit.org/show_bug.cgi?id=19798
        Masks are translated, and the mask images are swapped on the y-axis.

        Turned out that http://trac.webkit.org/changeset/31830/trunk/WebCore/svg/graphics/cg/SVGResourceMaskerCg.mm
        is guilty. GraphicsContext::clipToImageBuffer() does some extra transformations that SVGResourcesMaskerCg does not want.

        Long term goal is to remove the SVGResource*/SVGPaintServer* classes anyway, so it's okay to duplicate
        the "clip to image buffer" functionality, in the CG specific SVGResourceMaskerCg class - as it was before.

        * svg/graphics/cg/SVGResourceMaskerCg.mm:
        (WebCore::SVGResourceMasker::applyMask): Changed back to use CG clipping again.

2008-08-12  Dan Bernstein  <mitz@apple.com>

        - WebCore part of <rdar://problem/6121636>
          Make fast*alloc() abort() on failure and add "try" variants that
          return NULL on failure.

        Reviewed by Darin Adler.

        * platform/Arena.cpp:
        (WebCore::ArenaAllocate): Removed null checking of fastMalloc()'s
        result.
        * platform/graphics/cg/ImageBufferCG.cpp:
        (WebCore::ImageBuffer::create): Changed to use tryFastCalloc().

2008-08-12  Dan Bernstein  <mitz@apple.com>

        Reviewed by Darin Adler.

        - fix https://bugs.webkit.org/show_bug.cgi?id=19348
          <rdar://problem/5978447> REGRESSION (r34193): Setting the size of a frame with javascript document.body.row no longer works

        Test: fast/frames/frameset-style-recalc.html

        * html/HTMLFrameSetElement.cpp:
        (WebCore::HTMLFrameSetElement::recalcStyle): Changed to call the base
        class implementation after marking for layout.

2008-08-12  Dan Bernstein  <mitz@apple.com>

        Reviewed by John Sullivan.

        - move shouldUpdateWhenOffscreen from Settings to FrameView and rename it shouldUpdateWhileHidden

        * WebCore.base.exp:
        * page/FrameView.cpp:
        (WebCore::FrameViewPrivate::FrameViewPrivate):
        (WebCore::FrameView::shouldUpdateWhileHidden):
        (WebCore::FrameView::setShouldUpdateWhileHidden):
        * page/FrameView.h:
        * page/Settings.cpp:
        * page/Settings.h:

2008-08-12  Adam Roben  <aroben@apple.com>

        Windows build fix

        * bindings/js/JSSVGPODTypeWrapper.h: Align
        JSSVGDynamicPODTypeWrapper's and JSSVGStaticPODTypeWrapperWithParent's
        members on 16-byte boundaries to avoid an alignment warning.

2008-08-12  Nikolas Zimmermann  <zimmermann@kde.org>

        Reviewed by Oliver.

        Add new dynamice-update layout tests covering SVGMarkerElement.
        Fix bug: SVGMarkerElement's SVG DOM function calls don't update rendering.
        Fix orientAngle/orientType confusion: "auto" orient should always return "0" as angle.

        Tests: svg/dynamic-updates/SVGMarkerElement-dom-markerHeight-attr.html
               svg/dynamic-updates/SVGMarkerElement-dom-markerUnits-attr.html
               svg/dynamic-updates/SVGMarkerElement-dom-markerWidth-attr.html
               svg/dynamic-updates/SVGMarkerElement-dom-orient-attr.html
               svg/dynamic-updates/SVGMarkerElement-dom-refX-attr.html
               svg/dynamic-updates/SVGMarkerElement-dom-refY-attr.html
               svg/dynamic-updates/SVGMarkerElement-svgdom-markerHeight-prop.html
               svg/dynamic-updates/SVGMarkerElement-svgdom-markerUnits-prop.html
               svg/dynamic-updates/SVGMarkerElement-svgdom-markerWidth-prop.html
               svg/dynamic-updates/SVGMarkerElement-svgdom-orientAngle-prop.html
               svg/dynamic-updates/SVGMarkerElement-svgdom-orientType-prop.html
               svg/dynamic-updates/SVGMarkerElement-svgdom-refX-prop.html
               svg/dynamic-updates/SVGMarkerElement-svgdom-refY-prop.html
               svg/dynamic-updates/SVGMarkerElement-svgdom-setOrientToAngle-call.html
               svg/dynamic-updates/SVGMarkerElement-svgdom-setOrientToAuto-call.html

        * svg/SVGMarkerElement.cpp:
        (WebCore::SVGMarkerElement::SVGMarkerElement):
        (WebCore::SVGMarkerElement::parseMappedAttribute):
        (WebCore::SVGMarkerElement::svgAttributeChanged):
        (WebCore::SVGMarkerElement::childrenChanged):
        (WebCore::SVGMarkerElement::setOrientToAuto):
        (WebCore::SVGMarkerElement::setOrientToAngle):
        (WebCore::SVGMarkerElement::canvasResource):

2008-08-12  Nikolas Zimmermann  <zimmermann@kde.org>

        Reviewed by Oliver.

        Add new dynamic-update layout tests covering SVGImageElement.
        Fix bug: SVGImageElement doesn't react on 'preserveAspectRatio' changes.

        Tests: svg/dynamic-updates/SVGImageElement-dom-height-attr.html
               svg/dynamic-updates/SVGImageElement-dom-preserveAspectRatio-attr.html
               svg/dynamic-updates/SVGImageElement-dom-width-attr.html
               svg/dynamic-updates/SVGImageElement-dom-x-attr.html
               svg/dynamic-updates/SVGImageElement-dom-y-attr.html
               svg/dynamic-updates/SVGImageElement-svgdom-height-prop.html
               svg/dynamic-updates/SVGImageElement-svgdom-preserveAspectRatio-prop.html
               svg/dynamic-updates/SVGImageElement-svgdom-width-prop.html
               svg/dynamic-updates/SVGImageElement-svgdom-x-prop.html
               svg/dynamic-updates/SVGImageElement-svgdom-y-prop.html

        * svg/SVGImageElement.cpp:
        (WebCore::SVGImageElement::svgAttributeChanged):

2008-08-11  Anthony Ricaud  <rik24d@gmail.com>

        Changed Option/Alt-Up or Down in CSS editing when the value is
        near zero to jump to the next integer.

        Reviewed by Tim Hatcher.

        https://bugs.webkit.org/show_bug.cgi?id=20326

        * page/inspector/StylesSidebarPane.js:

2008-08-11  Anthony Ricaud  <rik24d@gmail.com>

        Changed the line highlight transition for an easier animation.

        Reviewed by Tim Hatcher.

        * page/inspector/SourceFrame.js:

2008-08-11  Keishi Hattori  <casey.hattori@gmail.com>

        Added support for some Firebug Command Line APIs.

        Reviewed by Tim Hatcher.

        https://bugs.webkit.org/show_bug.cgi?id=19867
        https://bugs.webkit.org/show_bug.cgi?id=19868
        https://bugs.webkit.org/show_bug.cgi?id=19869
        https://bugs.webkit.org/show_bug.cgi?id=19875
        https://bugs.webkit.org/show_bug.cgi?id=19876
        https://bugs.webkit.org/show_bug.cgi?id=19880

        * page/inspector/Console.js:
        (WebInspector.Console.prototype._evalInInspectedWindow):
        Create an object on the inspected window that holds the console
        command line API functions. This object is used in a with statement
        around the typed expression.

2008-08-11  Nikolas Zimmermann  <zimmermann@kde.org>

        Reviewed by Antti.

        Fixes: http://bugs.webkit.org/show_bug.cgi?id=17736

        JS wrapper objects around SVG POD types, that contain other SVG POD types with writable properties
        failed to update. Modification of the values were completly ignored (ie. transform.matrix.a = 50, didn't take any effect)

        Added tests: svg/custom/svg-modify-currentTranslate.html
                     svg/custom/tearoffs-with-tearoffs.html
                     svg/custom/immutable-properties.html

        Fixed tests: svg/dynamic-updates/SVGLinearGradientElement-svgdom-gradientTransform-prop.html

        * bindings/js/JSSVGPODTypeWrapper.h:
        (WebCore::JSSVGDynamicPODTypeWrapper::commitChange):
        (WebCore::JSSVGStaticPODTypeWrapperWithPODTypeParent::create):
        (WebCore::JSSVGStaticPODTypeWrapperWithPODTypeParent::commitChange):
        (WebCore::JSSVGStaticPODTypeWrapperWithPODTypeParent::JSSVGStaticPODTypeWrapperWithPODTypeParent):
        (WebCore::JSSVGStaticPODTypeWrapperWithParent::create):
        (WebCore::JSSVGStaticPODTypeWrapperWithParent::operator PODType):
        (WebCore::JSSVGStaticPODTypeWrapperWithParent::commitChange):
        (WebCore::JSSVGStaticPODTypeWrapperWithParent::JSSVGStaticPODTypeWrapperWithParent):
        * bindings/scripts/CodeGenerator.pm:
        * bindings/scripts/CodeGeneratorJS.pm:
        * svg/SVGSVGElement.idl: Add [Immutable] markers to SVG POD attributes, that contain POD types with writable attributes.
        * svg/SVGZoomEvent.idl:  SVG specification explicitely demands these attributes to be readonly, even its content.

2008-08-11  Brady Eidson  <beidson@apple.com>

        Reviewed by John and Anders

        Fix for <rdar://problem/6141797>

        When WebArchives were entirely a WebKit concept, there was a guarantee that a WebResource
        would never have nil data.

        When they were pushed down into WebCore, that guarantee was lost, subtly changing a few
        semantics with some WebKit applications.

        The guarantee was a good one and should be restored.

        Note that ApplicationCacheResource doesn't need any updates to follow this rule as it already
        creates an empty data object in the case of null data for its own purposes.

        * loader/SubstituteResource.h:
        (WebCore::SubstituteResource::SubstituteResource): ASSERT that the data is not null.  This
          well help any future subclassers not make this mistake.

        * loader/archive/ArchiveResource.cpp:
        (WebCore::ArchiveResource::create): Return 0 if the data is null.

2008-08-11  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Dave Hyatt

        https://bugs.webkit.org/show_bug.cgi?id=20328
        Fix a problem when an 'all' transition transition with more than
        one property changing is interrupted, and did some AnimationController
        cleanup.

        Test: transitions/interrupted-all-transition.html

        * page/AnimationController.cpp:
        (WebCore::ImplicitAnimation::ImplicitAnimation):
        (WebCore::AnimationControllerPrivate::blendProperties):
        (WebCore::CompositeAnimation::updateTransitions):
        (WebCore::CompositeAnimation::cleanupFinishedAnimations):
        (WebCore::CompositeAnimation::setTransitionStartTime):
        (WebCore::CompositeAnimation::overrideImplicitAnimations):
        (WebCore::CompositeAnimation::resumeOverriddenImplicitAnimations):
        (WebCore::ImplicitAnimation::animate):
        (WebCore::ImplicitAnimation::onAnimationEnd):
        (WebCore::ImplicitAnimation::sendTransitionEvent):
        (WebCore::ImplicitAnimation::affectsProperty):
        (WebCore::KeyframeAnimation::endAnimation):
        (WebCore::KeyframeAnimation::onAnimationEnd):

2008-08-11  Kevin McCullough  <kmccullough@apple.com>

        Reviewed by Tim.

        - Because console messages have group levels now, newly created messages
        that do not specify the level lose their message since the number of
        arguments is wrong.
 
        * page/inspector/Console.js:
        * page/inspector/Resource.js:

2008-08-11  Alp Toker  <alp@nuanti.com>

        Build fix. Add new files from r35666 (WebKitAnimationEvent). Also take
        the opportunity to sort the sources lists.

        * GNUmakefile.am:

2008-08-11  Timothy Hatcher  <timothy@apple.com>

        Speed up the the JavaScript syntax highlighter by generating
        the finders only once per script instead of per line.

        https://bugs.webkit.org/show_bug.cgi?id=20346

        Reviewed by Adam Roben.

        * page/inspector/SourceFrame.js:
        (WebInspector.SourceFrame.prototype._syntaxHighlightJavascriptLine):
        Removed, factored into syntaxHighlightJavascript as an inline function.
        (WebInspector.SourceFrame.prototype.syntaxHighlightJavascript):
        Pulled in the _syntaxHighlightJavascriptLine so it will create a closure.
        Generate the finders before iterating the lines.

2008-08-11  Adam Roben  <aroben@apple.com>

        Windows build fix

        * WebCore.vcproj/WebCore.vcproj: Added JSWebKitAnimationEvent.cpp and
        JSWebKitTransitionEvent.cpp to the project. Let VS reformat the file,
        too.

2008-08-11  Dan Bernstein  <mitz@apple.com>

        Reviewed by Darin Adler.

        - fix <rdar://problem/6131096> Reproducible crash in CounterNode::isReset under guard malloc

        Test: fast/css/counters/invalidate-cached-counter-node.html

        * rendering/RenderContainer.cpp:
        (WebCore::RenderContainer::invalidateCounters): Added. Invalidates all
        RenderCounters in :before and :after content.
        * rendering/RenderContainer.h:
        * rendering/RenderCounter.cpp:
        (WebCore::RenderCounter::isCounter): Renamed isRenderCounter() to this
        to match the RenderObject method.
        (WebCore::RenderCounter::invalidate): Added. Resets the cached
        CounterNode and invalidates the object's layout and preferred widths.
        (WebCore::destroyCounterNodeChildren): Added a call to
        invalidateCounters().
        * rendering/RenderCounter.h:
        * rendering/RenderObject.h:
        (WebCore::RenderObject::invalidateCounters):

2008-08-11  Dean Jackson  <dino@apple.com>

        Implement CSS Animation and Transition Events
        https://bugs.webkit.org/show_bug.cgi?id=20337

        Implement the events defined in the CSS Animations
        and Transitions specifications so code can react
        to animations and transitions.

        Reviewed by Tim Hatcher and Dave Hyatt.

        * DerivedSources.make:
        * GNUmakefile.am:
        * WebCore.pro:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * WebCoreSources.bkl:
            Build configs for new files

        * bindings/js/JSDOMWindowBase.cpp:
        * bindings/js/JSDOMWindowBase.h:
        * bindings/js/JSEventCustom.cpp:
        * dom/Document.h:
        * dom/Event.cpp:
        * dom/Event.h:
        * dom/EventTarget.cpp:
        * dom/EventTargetNode.cpp:
        * dom/EventTargetNode.h:
        * html/HTMLElement.cpp:
        * page/AnimationController.cpp:
            do all the new event stuff
            
        * html/HTMLAttributeNames.in:
            the onwebkitanimation* and onwebkittransitionend attrs

        * dom/WebKitAnimationEvent.cpp: Added.
        * dom/WebKitAnimationEvent.h: Added.
        * dom/WebKitAnimationEvent.idl: Added.
        * dom/WebKitTransitionEvent.cpp: Added.
        * dom/WebKitTransitionEvent.h: Added.
        * dom/WebKitTransitionEvent.idl: Added.
            New files for the events

        * manual-tests/transition-events.html: Added.
            New testfile

2008-08-11  Adam Roben  <aroben@apple.com>

        Add a ForwardingHeader for wtf/NotFound.h

        Rubberstamped by Darin Adler.

        * ForwardingHeaders/wtf/NotFound.h: Added.

2008-08-11  Timothy Hatcher  <timothy@apple.com>

        Fixes a bug where error bubbles in JavaScript resources would
        be clobbered by the syntax highlighter.

        https://bugs.webkit.org/show_bug.cgi?id=20345

        Reviewed by Adam Roben.

        * manual-tests/inspector/resources/script-error.js: Added.
        * manual-tests/inspector/styled-error-bubbles-in-scripts.html: Added.
        * page/inspector/SourceFrame.js:
        (WebInspector.SourceFrame.prototype._addMessageToSource):
        Check the nodeType and not the nodeName, this is less fragile.
        (WebInspector.SourceFrame.prototype._syntaxHighlightJavascriptLine):
        Check if the lastChild is an error bubble, if so remove it before
        getting the line's textContent. Add the error bubble back at the end.

== Rolled over to ChangeLog-2008-08-10 ==
