2005-12-19  Darin Adler  <darin@apple.com>

        Reviewed by Maciej.

        - fix http://bugzilla.opendarwin.org/show_bug.cgi?id=6143
          DOM::ElementImpl should use a RefPtr for the attribute map

        * khtml/xml/dom_elementimpl.cpp:
        (ElementImpl::ElementImpl): Remove code to initialize the pointer; not needed since
        RefPtr gets initialized to 0.
        (ElementImpl::~ElementImpl): Remove code to deref the pointer; RefPtr handles that.
        (ElementImpl::attributes): Add get() call to get raw pointer.
        (ElementImpl::setAttributeMap): Remove code to deref the old map and set the new map.
        But added code to clear the element pointer from the old map (missing in the old
        version). Also added a FIXME.
        (ElementImpl::createAttributeMap): Remove ref(); RefPtr handles that.
        (NamedAttrMapImpl::addAttribute): Use a RefPtr to guarantee the element does not go
        away in the middle of dispatching DOM events.
        (StyledElementImpl::attributeChanged): Clean up code by using the inline function
        mappedAttributes() instead of doing type casts.
        (StyledElementImpl::parseMappedAttribute): Ditto.
        (StyledElementImpl::getClassList): Ditto.

        * khtml/xml/dom_elementimpl.h: Make ElementImpl::namedAttrMap be a RefPtr instead
        of raw pointer. Added an overload of StyledElementImpl::mappedAttributes for both
        const and non-const.

        * khtml/xml/dom_nodeimpl.cpp: (DOM::NodeImpl::addChild): Use a RefPtr to ref/deref
        the child so that it doesn't leak.

        * khtml/html/htmlparser.h: Changed isindex to use a RefPtr.
        * khtml/html/htmlparser.cpp:
        (HTMLParser::~HTMLParser): Removed now-unneeded ref.
        (HTMLParser::isindexCreateErrorCheck): Remove now-unneeded deref/ref.
        (HTMLParser::handleIsindex): Put isindex element into a RefPtr. This prevents a
        crash that was otherwise happening during layout tests (caused indirectly by
        the changes above).
        (HTMLParser::startBody): Added call to get().

2005-12-19  Darin Adler  <darin@apple.com>

        Reviewed by Geoff Garen and Eric Seidel.

        - fix http://bugzilla.opendarwin.org/show_bug.cgi?id=4923
          stop using <ostream> in WebCore, eliminating the <cmath> troubles it causes

        * ForwardingHeaders/kxmlcore/AlwaysInline.h: Added.
        * WebCorePrefix.h: Removed the use of <ostream>.

        * kwq/KWQDef.h: Removed now-unused Q_INT64, Q_INT16, Q_UINT16, qRound, and _KWQ_IOSTREAM_.

        * kwq/KWQKHTMLPart.h: Removed some unneeded headers and added forward-declarations of classes
        instead. Corrected some incorrect member function declarations.
        * kwq/KWQKHTMLPart.mm: Added a now-needed header.

        * khtml/ecma/kjs_window.cpp: Removed the <cmath> workaround.
        * khtml/rendering/bidi.cpp: Added include of AlwaysInline.h and removed a
        lot of unnecessary includes.
        * khtml/rendering/render_canvasimage.cpp: Removed the <cmath> workaround.
        * khtml/rendering/render_image.cpp: Removed the <cmath> workaround.
        * khtml/rendering/render_text.cpp: Added include of AlwaysInline.h and removed a
        lot of unnecessary includes.

        * ksvg2/css/SVGCSSStyleSelector.cpp: (KDOM::CSSStyleSelector::applySVGProperty):
        * ksvg2/svg/SVGAnimateColorElementImpl.cpp: (SVGAnimateColorElementImpl::calculateColor):
        * ksvg2/svg/SVGAnimateTransformElementImpl.cpp: (SVGAnimateTransformElementImpl::handleTimerEvent):
        * ksvg2/svg/SVGAnimationElementImpl.cpp: (SVGAnimationElementImpl::closeRenderer):
        * ksvg2/svg/SVGLinearGradientElementImpl.cpp: (SVGLinearGradientElementImpl::buildGradient):
        * ksvg2/svg/SVGPatternElementImpl.cpp: (SVGPatternElementImpl::notifyAttributeChange):
        * ksvg2/svg/SVGRadialGradientElementImpl.cpp: (SVGRadialGradientElementImpl::buildGradient):
        Replaced use of qRound with use of lroundf or lround as appropriate.

        * kwq/KWQCString.h:
        * kwq/KWQCString.mm:
        * kwq/KWQDateTime.h:
        * kwq/KWQDateTime.mm:
        * kwq/KWQMap.h:
        * kwq/KWQMemArray.h:
        * kwq/KWQPoint.mm:
        * kwq/KWQPointArray.h:
        * kwq/KWQPtrList.h:
        * kwq/KWQPtrStack.h:
        * kwq/KWQPtrVector.h:
        * kwq/KWQRect.h:
        * kwq/KWQRect.mm:
        * kwq/KWQSize.h:
        * kwq/KWQSize.mm:
        * kwq/KWQValueList.h:
        Removed _KWQ_IOSTREAM_ code that was used at one time for unit tests, but is now unneeded,
        and requires <ostream>.

2005-12-19  Darin Adler  <darin@apple.com>

        Reviewed by Geoff Garen and John Sullivan.

        - fix http://bugzilla.opendarwin.org/show_bug.cgi?id=4312
          XMLHttpRequest headers that have two CRLF sequences lead to Obj-C exception

        I found this by code inspection after examining a security report about
        vulnerabilities in other browsers' XMLHttpRequest implementations.

        * kwq/KWQLoader.mm:
        (+[NSDictionary _webcore_dictionaryWithHeaderString:_webcore_dictionaryWithHeaderString:]):
        Check length of string before calling characterAtIndex:0 since it will fail for an empty string.

2005-12-19  Mitz Pettel  <opendarwin.org@mitzpettel.com>

        Reviewed by Beth

	- fix http://bugzilla.opendarwin.org/show_bug.cgi?id=6149
          REGRESSION (WebCore-417.5): horizontal scrollbar in overflow with top
          border doesn't receive mouse events

        * khtml/rendering/render_block.cpp:
        (khtml::RenderBlock::isPointInScrollbar):
	Removed borderTop() from horizontal scrollbar rect computation.
	* manual-tests/scrollbar-hittest2.html: Added.

2005-12-19  Alexey Proskuryakov  <ap@nypop.com>

        Reviewed by Darin, committed by Adele.

        - fix http://bugzilla.opendarwin.org/show_bug.cgi?id=5744
          XMLHttpRequest does not apply page encoding after assigning via innerHtml

        * khtml/ecma/xmlhttprequest.cpp:
        (getMIMEType): A helper function to get MIME type from a Content-Type string.
        (getCharset): A helper function to get charset from a Content-Type string.
        (KJS::XMLHttpRequest::getValueProperty): Factored out responseIsXML().
        (KJS::XMLHttpRequest::getResponseHeader): Return QString instead of JSValue
          (to get rid of unnecessary JSLocks).
        (KJS::XMLHttpRequest::responseIsXML): A new method that analyses Content-Type.
        (KJS::XMLHttpRequest::slotData): Use a correct charset for responses, see bug for details.
        (KJS::XMLHttpRequestProtoFunc::callAsFunction): Update for getResponseHeader() changes
        * khtml/ecma/xmlhttprequest.h:

== Rolled over to ChangeLog-2005-12-19 ==
